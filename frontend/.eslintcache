[{"/frontend/src/index.js":"1","/frontend/src/reportWebVitals.js":"2","/frontend/src/App.js":"3","/frontend/src/layout/Navbar.js":"4","/frontend/src/pages/NotFound.js":"5","/frontend/src/components/Semester.js":"6","/frontend/src/components/Home.js":"7","/frontend/src/components/ResetPassword.js":"8","/frontend/src/Context.js":"9","/frontend/src/components/Semesters.js":"10","/frontend/src/components/SemesterDetail.js":"11","/frontend/src/components/AddUISLesson.js":"12","/frontend/src/components/Lesson.js":"13","/frontend/src/components/Lessons.js":"14","/frontend/src/forms/AddUpdateLesson.js":"15","/frontend/src/components/LessonDetail.js":"16","/frontend/src/components/Overview.js":"17","/frontend/src/components/Attendance.js":"18","/frontend/src/forms/Register.js":"19","/frontend/src/forms/Login.js":"20","/frontend/src/forms/AddUpdateSemester.js":"21"},{"size":614,"mtime":1614507556731,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1614507556735,"results":"24","hashOfConfig":"23"},{"size":2130,"mtime":1614507556731,"results":"25","hashOfConfig":"23"},{"size":9760,"mtime":1614507556735,"results":"26","hashOfConfig":"23"},{"size":185,"mtime":1614507556735,"results":"27","hashOfConfig":"23"},{"size":7136,"mtime":1614507556731,"results":"28","hashOfConfig":"23"},{"size":663,"mtime":1614507556731,"results":"29","hashOfConfig":"23"},{"size":3569,"mtime":1614507556731,"results":"30","hashOfConfig":"23"},{"size":527,"mtime":1614507556731,"results":"31","hashOfConfig":"23"},{"size":9051,"mtime":1614670576914,"results":"32","hashOfConfig":"23"},{"size":15421,"mtime":1614683582912,"results":"33","hashOfConfig":"23"},{"size":751,"mtime":1614507556731,"results":"34","hashOfConfig":"23"},{"size":6899,"mtime":1614507556731,"results":"35","hashOfConfig":"23"},{"size":8384,"mtime":1614670687226,"results":"36","hashOfConfig":"23"},{"size":34678,"mtime":1614685025186,"results":"37","hashOfConfig":"23"},{"size":16935,"mtime":1614684299549,"results":"38","hashOfConfig":"23"},{"size":10394,"mtime":1614675883049,"results":"39","hashOfConfig":"23"},{"size":18801,"mtime":1614679514316,"results":"40","hashOfConfig":"23"},{"size":7961,"mtime":1614507556731,"results":"41","hashOfConfig":"23"},{"size":7600,"mtime":1614507556731,"results":"42","hashOfConfig":"23"},{"size":16293,"mtime":1614507556731,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"lntgli",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/frontend/src/index.js",[],["88","89"],"/frontend/src/reportWebVitals.js",[],"/frontend/src/App.js",[],"/frontend/src/layout/Navbar.js",[],"/frontend/src/pages/NotFound.js",[],"/frontend/src/components/Semester.js",[],"/frontend/src/components/Home.js",[],"/frontend/src/components/ResetPassword.js",[],"/frontend/src/Context.js",[],"/frontend/src/components/Semesters.js",[],"/frontend/src/components/SemesterDetail.js",[],"/frontend/src/components/AddUISLesson.js",[],"/frontend/src/components/Lesson.js",[],"/frontend/src/components/Lessons.js",[],"/frontend/src/forms/AddUpdateLesson.js",["90"],"/frontend/src/components/LessonDetail.js",["91"],"/frontend/src/components/Overview.js",[],"/frontend/src/components/Attendance.js",["92"],"import { useState, useEffect, useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserContext } from '../Context';\n\nvar Kucukdevapi = require('kucukdevapi');\n\nconst Attendance = ({ history }) => {\n    const [login, setLogin] = useContext(UserContext);\n\n    const [semester, setSemester] = useState({});\n    const [lessons, setLessons] = useState([]);\n    const [week, setWeek] = useState(1)\n    const [scheduleRows, setScheduleRows] = useState([])\n    const [semStartDate, setSemStartDate] = useState(new Date())\n    const [dates, setDates] = useState([])\n\n    const [oldAbsences, setOldAbsences] = useState([])\n    const [oldAbsenceIDs, setOldAbsenceIDs] = useState([])\n    const [absenceIDs, setAbsenceIDs] = useState([])\n    const [absences, setAbsences] = useState([])\n    const [presenceIDs, setPresenceIDs] = useState([])\n    const [presences, setPresences] = useState([])\n\n    let defaultClient = Kucukdevapi.ApiClient.instance;\n    let OAuth2PasswordBearer = defaultClient.authentications[\"OAuth2PasswordBearer\"];\n    OAuth2PasswordBearer.accessToken = login.userToken;\n    let uid = login.userID;\n    let sid = login.semesterID;\n\n    const weeksBetween = Math.round((semester.endDate - semester.startDate) / (7 * 24 * 60 * 60 * 1000))\n\n    useEffect(() => {\n        if (login) {\n            let smestersApiInstance = new Kucukdevapi.SemestersApi();\n            smestersApiInstance.getSingleSemester(uid, sid, (error, data, response) => {\n                if (error) {\n                    console.error(error);\n                    if (error.response.status === 401) {\n                        setLogin(false)\n                    }\n                } else {\n                    console.log(\"API called successfully. Returned data: \" + data);\n                    setSemester(data);\n                    setSemStartDate(data.startDate)\n                    const abvDays = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"]\n                    let startDay = abvDays.indexOf((String(data.startDate).split(\" \"))[0])\n\n                    let curWeek = Math.ceil((Date.now() - data.startDate) / (7 * 24 * 60 * 60 * 1000) + (startDay * 0.15))\n                    if (curWeek < 0) {\n                        curWeek = String(1)\n                    } else if (curWeek > weeksBetween) {\n                        curWeek = String(weeksBetween)\n                    } else {\n                        curWeek = String(curWeek)\n                    }\n                    setWeek(curWeek)\n                }\n            });\n\n            let lessonsApiInstance = new Kucukdevapi.LessonsApi();\n            lessonsApiInstance.listLessonsOfSemester(\n                uid,\n                sid,\n                (error, data, response) => {\n                    if (error) {\n                        console.error(error);\n                        if (error.response.status === 401) {\n                            setLogin(false)\n                        }\n                    } else {\n                        console.log(\"API called successfully. Returned data: \" + data);\n                        setLessons(data);\n\n                        const absenceArray = []\n                        const absenceIDArray = []\n                        for (let i = 0; i < data.length; i++) {\n                            for (let j = 0; j < data[i].absences.length; j++) {\n                                absenceArray.push(data[i].absences[j])\n                                absenceIDArray.push(data[i]._id)\n                            }\n                        }\n\n                        setOldAbsences(absenceArray)\n                        setOldAbsenceIDs(absenceIDArray)\n                        setAbsences(absenceArray)\n                        setAbsenceIDs(absenceIDArray)\n                    }\n                }\n            );\n        } else {\n            history.push(\"/signin\")\n        }\n\n    }, [uid, sid, login, setLogin, history, weeksBetween]);\n\n    let strCol = \"240,196,196x220,196,240x255,194,126x255,240,126x202,255,126x126,246,255x126,200,255x184,126,255x238,126,255x126,128,255x255,126,194x196,224,240x126,255,219x196,240,229x243,255,126x126,255,128\"\n    let colorArray = strCol.split(\"x\")\n\n    // const colorArray = [\n    //     \"bg-gray-400\",\n    //     \"bg-red-600\",\n    //     \"bg-yellow-500\",\n    //     \"bg-green-600\",\n    //     \"bg-blue-300\",\n    //     \"bg-indigo-300\",\n    //     \"bg-purple-600\",\n    //     \"bg-pink-600\",\n    //     \"bg-gray-900\",\n    //     \"bg-green-900\",\n    //     \"bg-indigo-900\",\n    //     \"bg-purple-900\",\n    //     \"bg-pink-900\",\n    // ];\n\n\n    useEffect(() => {\n        const abvDays = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"]\n        let curDay = abvDays.indexOf((String(new Date()).split(\" \"))[0])\n        let startDay = abvDays.indexOf((String(semStartDate).split(\" \"))[0])\n\n        const addDays = (date, days) => {\n            const copy = new Date(Number(date))\n            copy.setDate(date.getDate() + days - startDay)\n            let resDate = String(copy).split(\" \")\n            return `${resDate[1]} ${resDate[2]}`\n        }\n        const dateArray = []\n        for (let i = 0; i < 5; i++) {\n            dateArray.push(addDays(semStartDate, ((Number(week) - 1) * 7) + i))\n        }\n        setDates(dateArray)\n\n        let lessonSlots = {\n            0: {},\n            1: {},\n            2: {},\n            3: {},\n            4: {},\n        };\n\n        for (let i = 0; i < lessons.length; i++) {\n            for (let j = 0; j < lessons[i].slots.length; j++) {\n                const day_hour = lessons[i].slots[j].split(\",\");\n                const isLab = day_hour[2] === \"1\" ? true : false;\n                if (!lessonSlots[day_hour[0]][day_hour[1]])\n                    lessonSlots[day_hour[0]][day_hour[1]] = [];\n                const arr = absences.filter((absence, index) => absence === `${week},${day_hour[0]},${day_hour[1]},${day_hour[2]}` && absenceIDs[index] === lessons[i]._id)\n                const flag = arr.length > 0\n                lessonSlots[day_hour[0]][day_hour[1]].push({\n                    id: lessons[i]._id,\n                    name: lessons[i].name,\n                    color: colorArray[i % colorArray.length],\n                    flag: !flag,\n                    lab: isLab\n                });\n            }\n        }\n\n        let hour = String(semester.startHour);\n        let resStart = hour.split(\".\");\n        let startHour = Number(resStart[0]);\n        let startMin = Number(resStart[1]);\n\n        const period = semester.dLesson + semester.dBreak;\n        const periodHour = parseInt(period / 60);\n        const periodMin = period % 60;\n\n        const scheduleArray = [];\n        for (let index = 1; index <= semester.slotCount; index++) {\n            scheduleArray.push(\n                <tr key={index}>\n                    <td className=\"px-6 pb-2 border-b text-blue-900 border-gray-500 text-sm leading-5\">\n                        {hour}\n                    </td>\n                    <td\n                        className={`border border-gray-500 text-blue-900 text-sm leading-5 ${(curDay === 0 || curDay > 4) && \"bg-gray-200\"}`}\n                    >\n                        {lessonSlots[0][index] &&\n                            lessonSlots[0][index].map((l) => (\n                                <div style={{ backgroundColor: `rgb(${l.color})` }} className=\"py-1 m-1\"><Link className=\"hover:underline\" to={`/lessons/${l.id}`}>{`${l.name} ${l.lab ? \" LAB\" : \"\"}`}</Link> <input className=\"ml-2\" onChange={(e) => selectAbsences(e, `${week},0,${index},${l.lab ? \"1\" : \"0\"}`, l)} checked={l.flag} type=\"checkbox\" /></div>\n                            ))}\n                    </td>\n                    <td\n                        className={`border border-gray-500 text-blue-900 text-sm leading-5 ${curDay === 1 && \"bg-gray-200\"}`}\n                    >\n                        {lessonSlots[1][index] &&\n                            lessonSlots[1][index].map((l) => (\n                                <div style={{ backgroundColor: `rgb(${l.color})` }} className=\"py-1 m-1\"><Link className=\"hover:underline\" to={`/lessons/${l.id}`}>{`${l.name} ${l.lab ? \" LAB\" : \"\"}`}</Link> <input className=\"ml-2\" onChange={(e) => selectAbsences(e, `${week},1,${index},${l.lab ? \"1\" : \"0\"}`, l)} checked={l.flag} type=\"checkbox\" /></div>\n                            ))}\n                    </td>\n                    <td\n                        className={`border border-gray-500 text-blue-900 text-sm leading-5 ${curDay === 2 && \"bg-gray-200\"}`}\n                    >\n                        {lessonSlots[2][index] &&\n                            lessonSlots[2][index].map((l) => (\n                                <div style={{ backgroundColor: `rgb(${l.color})` }} className=\"py-1 m-1\"><Link className=\"hover:underline\" to={`/lessons/${l.id}`}>{`${l.name} ${l.lab ? \" LAB\" : \"\"}`}</Link> <input className=\"ml-2\" onChange={(e) => selectAbsences(e, `${week},2,${index},${l.lab ? \"1\" : \"0\"}`, l)} checked={l.flag} type=\"checkbox\" /></div>\n                            ))}\n                    </td>\n                    <td\n                        className={`border border-gray-500 text-blue-900 text-sm leading-5 ${curDay === 3 && \"bg-gray-200\"}`}\n                    >\n                        {lessonSlots[3][index] &&\n                            lessonSlots[3][index].map((l) => (\n                                <div style={{ backgroundColor: `rgb(${l.color})` }} className=\"py-1 m-1\"><Link className=\"hover:underline\" to={`/lessons/${l.id}`}>{`${l.name} ${l.lab ? \" LAB\" : \"\"}`}</Link> <input className=\"ml-2\" onChange={(e) => selectAbsences(e, `${week},3,${index},${l.lab ? \"1\" : \"0\"}`, l)} checked={l.flag} type=\"checkbox\" /></div>\n                            ))}\n                    </td>\n                    <td\n                        className={`border-b border-gray-500 text-blue-900 text-sm leading-5 ${curDay === 4 && \"bg-gray-200\"}`}\n                    >\n                        {lessonSlots[4][index] &&\n                            lessonSlots[4][index].map((l) => (\n                                <div style={{ backgroundColor: `rgb(${l.color})` }} className=\"py-1 m-1\"><Link className=\"hover:underline\" to={`/lessons/${l.id}`}>{`${l.name} ${l.lab ? \" LAB\" : \"\"}`}</Link> <input className=\"ml-2\" onChange={(e) => selectAbsences(e, `${week},4,${index},${l.lab ? \"1\" : \"0\"}`, l)} checked={l.flag} type=\"checkbox\" /></div>\n                            ))}\n                    </td>\n                </tr>\n            );\n\n            startHour += periodHour;\n            startMin += periodMin;\n\n            if (startMin >= 60) {\n                startHour += 1;\n                startMin = startMin % 60;\n            }\n\n            if (startMin < 10) {\n                hour = startHour + \".0\" + startMin;\n            } else {\n                hour = startHour + \".\" + startMin;\n            }\n        }\n\n        setScheduleRows(scheduleArray)\n\n    }, [semester, lessons, absenceIDs, week, absences, presences, semStartDate])\n\n\n    const selectAbsences = (e, newAbs, l) => {\n        if (e.target.checked) {\n            let place;\n            for (let i = 0; i < absences.length; i++) {\n                if (absences[i] === newAbs && absenceIDs[i] === l.id) {\n                    place = i\n                }\n            }\n            setAbsenceIDs(absenceIDs.filter((id, index) => index !== place))\n            setAbsences(absences.filter((absence, index) => index !== place))\n            setPresenceIDs([...presenceIDs, l.id])\n            setPresences([...presences, newAbs])\n        } else {\n            let place;\n            for (let i = 0; i < presences.length; i++) {\n                if (presences[i] === newAbs && presenceIDs[i] === l.id) {\n                    place = i\n                }\n            }\n            setAbsenceIDs([...absenceIDs, l.id])\n            setAbsences([...absences, newAbs])\n            setPresenceIDs(presenceIDs.filter((id, index) => index !== place))\n            setPresences(presences.filter((presence, index) => index !== place))\n        }\n    }\n\n    const setNext = () => {\n        if (Number(week) + 1 <= weeksBetween) {\n            let cWeek = Number(week) + 1\n            setWeek(String(cWeek))\n        }\n    }\n\n    const setPrevious = () => {\n        if (Number(week) - 1 > 0) {\n            let cWeek = Number(week) - 1\n            setWeek(String(cWeek))\n        }\n    }\n\n    const saveWeek = () => {\n        const indexes = []\n        for (let i = 0; i < absences.length; i++) {\n            for (let j = 0; j < oldAbsences.length; j++) {\n                if (absences[i] === oldAbsences[j] && absenceIDs[i] === oldAbsenceIDs[j]) {\n                    indexes.push(i)\n                }\n            }\n        }\n\n        let indexAbsence = [...absences]\n        let indexID = [...absenceIDs]\n\n        indexAbsence = indexAbsence.filter((absence, index) => -1 === indexes.indexOf((index)))\n        indexID = indexID.filter((id, index) => -1 === indexes.indexOf((index)))\n\n        let apiInstance = new Kucukdevapi.LessonsApi();\n\n        for (let k = 0; k < indexAbsence.length; k++) {\n            let lid = indexID[k];\n            let absenceModel = new Kucukdevapi.AbsenceModel(indexAbsence[k]);\n            apiInstance.createAbsence(uid, sid, lid, absenceModel, (error, data, response) => {\n                if (error) {\n                    console.error(error);\n                } else {\n                    console.log('API called successfully. Returned data: ' + data);\n                }\n            });\n        }\n\n        for (let l = 0; l < presences.length; l++) {\n            let lid = presenceIDs[l];\n            let absenceModel = new Kucukdevapi.AbsenceModel(presences[l]);\n            apiInstance.deleteAbsence(uid, sid, lid, absenceModel, (error, data, response) => {\n                if (error) {\n                    console.error(error);\n                } else {\n                    console.log('API called successfully. Returned data: ' + data);\n                }\n            });\n        }\n\n    }\n\n\n    return (\n        <div className=\"flex flex-col mt-8 xl:mx-40\">\n            <h1 className=\"flex justify-start text-2xl ml-8 md:ml-4\">Your Attendance <div className=\"font-extralight ml-2\">Week {week}</div></h1>\n            <div className=\"py-2 overflow-x-auto sm:px-6 pr-10 lg:px-8\">\n                <div className=\"align-middle inline-block min-w-full shadow overflow-hidden bg-white shadow-dashboard px-8 pt-2 rounded-bl-lg rounded-br-lg\">\n                    <table className=\"min-w-full\">\n                        <thead>\n                            <tr className=\"\">\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm text-left leading-4 text-blue-500 tracking-wider\">#</th>\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\"><div className=\"text-gray-600\">{dates[0]}</div> Monday</th>\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\"><div className=\"text-gray-600\">{dates[1]}</div> Tuesday</th>\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\"><div className=\"text-gray-600\">{dates[2]}</div> Wednesday</th>\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\"><div className=\"text-gray-600\">{dates[3]}</div> Thursday</th>\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\"><div className=\"text-gray-600\">{dates[4]}</div> Friday</th>\n                            </tr>\n                        </thead>\n                        <tbody className=\"bg-white  \">\n                            {scheduleRows}\n                        </tbody>\n                    </table>\n                    <div className=\"flex flex-row justify-between\">\n                        <div className=\"flex text-xs md:text-base my-4\">\n                            <button onClick={() => saveWeek()}\n\n                                className=\"px-8 py-2 font-bold text-white bg-blue-500 rounded-full hover:bg-blue-700 focus:outline-none focus:shadow-outline\"\n\n                            >\n                                Save All Changes\n                </button>\n                        </div>\n\n                        <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-end my-4 work-sans\">\n                            <div>\n                                <nav className=\"relative z-0 inline-flex shadow-sm\">\n                                    <div>\n                                        <button onClick={() => setPrevious()} className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-500 hover:text-gray-400 focus:z-10 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100 active:text-gray-500 transition ease-in-out duration-150\" aria-label=\"Previous\">\n                                            <svg className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                                <path fillRule=\"evenodd\" d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                                            </svg>\n                                        </button>\n                                    </div>\n                                    <div v-if=\"pagination.current_page < pagination.last_page\">\n                                        <button onClick={() => setNext()} className=\"-ml-px relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-500 hover:text-gray-400 focus:z-10 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100 active:text-gray-500 transition ease-in-out duration-150\" aria-label=\"Next\">\n                                            <svg className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                                <path fillRule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\n                                            </svg>\n                                        </button>\n                                    </div>\n                                </nav>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Attendance\n","/frontend/src/forms/Register.js",[],"/frontend/src/forms/Login.js",[],"/frontend/src/forms/AddUpdateSemester.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":135,"column":8,"nodeType":"99","endLine":135,"endColumn":35,"suggestions":"100"},{"ruleId":"97","severity":1,"message":"101","line":139,"column":8,"nodeType":"99","endLine":139,"endColumn":47,"suggestions":"102"},{"ruleId":"97","severity":1,"message":"103","line":235,"column":8,"nodeType":"99","endLine":235,"endColumn":80,"suggestions":"104"},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectSlots'. Either include it or remove the dependency array.","ArrayExpression",["107"],"React Hook useEffect has a missing dependency: 'deleteAbsence'. Either include it or remove the dependency array.",["108"],"React Hook useEffect has missing dependencies: 'colorArray' and 'selectAbsences'. Either include them or remove the dependency array.",["109"],"no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},"Update the dependencies array to be: [slots, semester, lessonID, selectSlots]",{"range":"116","text":"117"},"Update the dependencies array to be: [absences, lesson, slots, semStartDate, deleteAbsence]",{"range":"118","text":"119"},"Update the dependencies array to be: [semester, lessons, absenceIDs, week, absences, presences, semStartDate, colorArray, selectAbsences]",{"range":"120","text":"121"},[6023,6050],"[slots, semester, lessonID, selectSlots]",[5776,5815],"[absences, lesson, slots, semStartDate, deleteAbsence]",[10928,11000],"[semester, lessons, absenceIDs, week, absences, presences, semStartDate, colorArray, selectAbsences]"]