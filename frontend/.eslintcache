[{"/frontend/src/index.js":"1","/frontend/src/reportWebVitals.js":"2","/frontend/src/App.js":"3","/frontend/src/layout/Navbar.js":"4","/frontend/src/pages/NotFound.js":"5","/frontend/src/components/Semester.js":"6","/frontend/src/components/Home.js":"7","/frontend/src/components/ResetPassword.js":"8","/frontend/src/Context.js":"9","/frontend/src/components/Semesters.js":"10","/frontend/src/components/SemesterDetail.js":"11","/frontend/src/components/AddUISLesson.js":"12","/frontend/src/components/Lesson.js":"13","/frontend/src/components/Lessons.js":"14","/frontend/src/forms/AddUpdateLesson.js":"15","/frontend/src/components/LessonDetail.js":"16","/frontend/src/components/Overview.js":"17","/frontend/src/components/Attendance.js":"18","/frontend/src/forms/Register.js":"19","/frontend/src/forms/Login.js":"20","/frontend/src/forms/AddUpdateSemester.js":"21"},{"size":614,"mtime":1614020352085,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1614020352089,"results":"24","hashOfConfig":"23"},{"size":2130,"mtime":1614178021218,"results":"25","hashOfConfig":"23"},{"size":9760,"mtime":1614338097442,"results":"26","hashOfConfig":"23"},{"size":185,"mtime":1614020352089,"results":"27","hashOfConfig":"23"},{"size":7136,"mtime":1614429611846,"results":"28","hashOfConfig":"23"},{"size":663,"mtime":1614020352085,"results":"29","hashOfConfig":"23"},{"size":3569,"mtime":1614020352085,"results":"30","hashOfConfig":"23"},{"size":527,"mtime":1614020352085,"results":"31","hashOfConfig":"23"},{"size":9003,"mtime":1614368917569,"results":"32","hashOfConfig":"23"},{"size":15310,"mtime":1614422406850,"results":"33","hashOfConfig":"23"},{"size":751,"mtime":1614020352085,"results":"34","hashOfConfig":"23"},{"size":6892,"mtime":1614369005021,"results":"35","hashOfConfig":"23"},{"size":8338,"mtime":1614368904009,"results":"36","hashOfConfig":"23"},{"size":21177,"mtime":1614020352085,"results":"37","hashOfConfig":"23"},{"size":14962,"mtime":1614421729475,"results":"38","hashOfConfig":"23"},{"size":9121,"mtime":1614420707005,"results":"39","hashOfConfig":"23"},{"size":16988,"mtime":1614425040202,"results":"40","hashOfConfig":"23"},{"size":7961,"mtime":1614020352085,"results":"41","hashOfConfig":"23"},{"size":7600,"mtime":1614020352085,"results":"42","hashOfConfig":"23"},{"size":16391,"mtime":1614428883876,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"u0vdh2",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/frontend/src/index.js",[],["90","91"],"/frontend/src/reportWebVitals.js",[],"/frontend/src/App.js",[],"/frontend/src/layout/Navbar.js",[],"/frontend/src/pages/NotFound.js",[],"/frontend/src/components/Semester.js",[],"/frontend/src/components/Home.js",[],"/frontend/src/components/ResetPassword.js",[],"/frontend/src/Context.js",[],"/frontend/src/components/Semesters.js",[],"/frontend/src/components/SemesterDetail.js",[],"/frontend/src/components/AddUISLesson.js",[],"/frontend/src/components/Lesson.js",["92"],"import { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Lesson = ({ lesson, onDeleteLesson }) => {\n    const [lessonDeleteModal, setLessonDeleteModal] = useState(false);\n    const [slots] = useState(lesson.slots)\n    const [fixedSlots, setFixedSlots] = useState([])\n\n    useEffect(() => {\n        const days = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\"]\n\n        let daySlot = [[], [], [], [], []]\n\n        for (let i = 0; i < slots.length; i++) {\n            const resSlot = slots[i].split(\",\")\n            daySlot[resSlot[0]].push(resSlot[1])\n        }\n\n        let day;\n        const fixedSlot = []\n        for (let j = 0; j < daySlot.length; j++) {\n            daySlot[j].length > 0 ? day = `${days[j]} ` : day = \"null\"\n            for (let k = 0; k < daySlot[j].length; k++) {\n                day += `${daySlot[j][k]}`\n                if (k < daySlot[j].length - 1) day += \",\"\n            }\n            day !== \"null\" && fixedSlot.push(`${day} `)\n        }\n\n        setFixedSlots(fixedSlot)\n\n    }, [lesson])\n\n    return (\n        <tr>\n            <td className=\"px-6 py-4 whitespace-no-wrap border-b border-gray-500\">\n                <div className=\"text-sm text-left leading-5 text-blue-900\">{lesson.name}</div>\n            </td>\n            <td className=\"px-6 py-4 whitespace-no-wrap border-b text-blue-900 border-gray-500 text-sm leading-5\">{fixedSlots.map((slot, index) => <p key={index}>{slot}</p>)}</td>\n            <td className=\"px-6 py-4 whitespace-no-wrap border-b text-blue-900 border-gray-500 text-sm leading-5\">{(lesson.absences).length}</td>\n            <td className=\"px-6 py-4 whitespace-no-wrap border-b text-blue-900 border-gray-500 text-sm leading-5\">\n                <div className=\"flex justify-evenly flex-col md:flex-row\">\n                    <span className=\"relative inline-block px-3 py-1 font-semibold text-green-900 leading-tight\">\n                        <span aria-hidden className=\"absolute inset-0 bg-yellow-300 rounded-full\"></span>\n                        <Link to={{ pathname: `/lessons/update-lesson/${lesson._id}` }} className=\"relative text-xs font-bold\">Edit</Link>\n\n                    </span>\n                    <span className=\"relative inline-block px-3 py-1 font-semibold text-green-900 leading-tight\">\n                        <span aria-hidden className=\"absolute inset-0 bg-red-500 opacity-90 rounded-full\"></span>\n                        <button onClick={() => setLessonDeleteModal(true)} type=\"button\"\n                            style={{ transition: \"all .15s ease\" }} className=\"relative text-xs font-bold\">Delete</button>\n                    </span>\n                    <span className=\"relative inline-block px-3 py-1 font-semibold text-green-900 leading-tight\">\n                        <span aria-hidden className=\"absolute inset-0 bg-green-500 opacity-90 rounded-full\"></span>\n                        <Link to={`/lessons/${lesson._id}`} className=\"relative text-xs font-bold\">View</Link>\n                    </span>\n                    {lessonDeleteModal ? (\n                        <div>\n                            <div\n                                className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\n                            >\n                                <div className=\"relative w-auto my-6 mx-auto max-w-3xl\">\n                                    {/*content*/}\n                                    <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\n                                        {/*header*/}\n                                        <div className=\"flex items-start justify-between p-5 border-b border-solid border-gray-300 rounded-t\">\n                                            <h3 className=\"pt-4 text-2xl text-center\">Delete lesson: {lesson.name}</h3>\n\n                                            <button\n                                                className=\"p-1 ml-auto bg-transparent border-0 text-black opacity-5 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\n                                                onClick={() => setLessonDeleteModal(false)}\n                                            >\n                                                <span className=\"bg-transparent text-black opacity-5 h-6 w-6 text-2xl block outline-none focus:outline-none\">\n                                                    ×\n                    </span>\n                                            </button>\n                                        </div>\n                                        {/*body*/}\n                                        <p className=\"flex justify-center text-base m-8\">You will lose everything belongs to this lesson irreversibly!</p>\n                                        {/*footer*/}\n                                        <div className=\"flex items-center justify-end p-6 border-t border-solid border-gray-300 rounded-b\">\n                                            <button\n                                                className=\"background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1\"\n                                                type=\"button\"\n                                                style={{ transition: \"all .15s ease\" }}\n                                                onClick={() => setLessonDeleteModal(false)}\n                                            >\n                                                Close\n                  </button>\n                                            <button\n                                                className=\"bg-red-500 text-white active:bg-red-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1\"\n                                                type=\"button\"\n                                                style={{ transition: \"all .15s ease\" }}\n                                                onClick={() => {\n                                                    setLessonDeleteModal(false)\n                                                    onDeleteLesson()\n                                                }\n                                                }\n                                            >\n                                                Delete Anyway\n                  </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\n                        </div>\n                    ) : null}\n                </div>\n            </td>\n        </tr>\n    )\n}\n\nexport default Lesson\n","/frontend/src/components/Lessons.js",[],"/frontend/src/forms/AddUpdateLesson.js",["93"],"import { useState, useEffect, useContext } from 'react'\nimport { Link } from \"react-router-dom\";\nimport { UserContext } from '../Context';\n\nvar Kucukdevapi = require('kucukdevapi');\n\n\nconst AddLesson = ({ history, match }) => {\n    const [login, setLogin] = useContext(UserContext);\n\n    const [semester, setSemester] = useState({})\n    const [calculateModal, setCalculateModal] = useState(false);\n\n    const [slots, setSlots] = useState([])\n    const [lessonName, setLessonName] = useState(\"\")\n    const [instrutcorName, setInstructorName] = useState(\"\")\n    const [absenceLimit, setAbsenceLimit] = useState(0)\n    const [numOfWeeks, setNumOfWeeks] = useState(14)\n    const [lessonPerWeek, setLessonPerWeek] = useState(5)\n    const [maxPercentage, setMaxPercentage] = useState(30)\n    const [scheduleRows, setScheduleRows] = useState([])\n\n    const lessonID = match.params.id\n\n    let defaultClient = Kucukdevapi.ApiClient.instance;\n    let OAuth2PasswordBearer = defaultClient.authentications['OAuth2PasswordBearer'];\n    OAuth2PasswordBearer.accessToken = login.userToken;\n    let uid = login.userID;\n    let sid = login.semesterID;\n\n    useEffect(() => {\n        if (login) {\n            if (lessonID) {\n                let apiInstance = new Kucukdevapi.LessonsApi();\n                let lid = lessonID;\n                apiInstance.getSingleLesson(uid, sid, lid, (error, data, response) => {\n                    if (error) {\n                        console.error(error);\n                        if (error.response.status === 401) {\n                            setLogin(false)\n                        }\n                    } else {\n                        console.log('API called successfully. Returned data: ' + data);\n                        setAbsenceLimit(data.absenceLimit)\n                        setLessonName(data.name)\n                        setInstructorName(data.instructor)\n                        setSlots(data.slots)\n                    }\n                });\n            } else {\n                setSlots([])\n                setAbsenceLimit(0)\n            }\n\n            let apiInstance = new Kucukdevapi.SemestersApi();\n            apiInstance.getSingleSemester(uid, sid, (error, data, response) => {\n                if (error) {\n                    console.error(error);\n                    if (error.response.status === 401) {\n                        setLogin(false)\n                    }\n                } else {\n                    console.log('API called successfully. Returned data: ' + data);\n                    setSemester(data)\n                }\n            });\n        } else {\n            history.push(\"/signin\")\n        }\n\n    }, [lessonID, uid, sid, login, setLogin, history])\n\n\n    useEffect(() => {\n        let hour = String(semester.startHour)\n        let resStart = hour.split(\".\")\n        let startHour = Number(resStart[0])\n        let startMin = Number(resStart[1])\n\n        const period = semester.dLesson + semester.dBreak\n        const periodHour = parseInt(period / 60)\n        const periodMin = period % 60\n\n        const scheduleArray = []\n        if (!lessonID || slots.length !== 0 || (slots.length === 0 && lessonID)) {\n            for (let index = 1; index <= semester.slotCount; index++) {\n                scheduleArray.push(<tr key={index}>\n                    <td className=\"px-6 py-1 whitespace-no-wrap border-b text-blue-900 border-gray-500 text-sm leading-5\">{hour}</td>\n                    <td className=\"border border-gray-500 text-blue-900 text-sm leading-5\"><input onChange={() => selectSlots(`0,${index}`)} checked={slots.includes(`0,${index}`)} type=\"checkbox\" /></td>\n                    <td className=\"border border-gray-500 text-blue-900 text-sm leading-5\"><input onChange={() => selectSlots(`1,${index}`)} checked={slots.includes(`1,${index}`)} type=\"checkbox\" /></td>\n                    <td className=\"border text-blue-900 border-gray-500 text-sm leading-5\"><input onChange={() => selectSlots(`2,${index}`)} checked={slots.includes(`2,${index}`)} type=\"checkbox\" /></td>\n                    <td className=\"border text-blue-900 border-gray-500 text-sm leading-5\"><input onChange={() => selectSlots(`3,${index}`)} checked={slots.includes(`3,${index}`)} type=\"checkbox\" /></td>\n                    <td className=\"border-b border-gray-500 text-blue-900 text-sm leading-5\"><input onChange={() => selectSlots(`4,${index}`)} checked={slots.includes(`4,${index}`)} type=\"checkbox\" /></td>\n                </tr >);\n\n                startHour += periodHour\n                startMin += periodMin\n\n                if (startMin >= 60) {\n                    startHour += 1\n                    startMin = startMin % 60\n                }\n\n                if (startMin < 10) {\n                    hour = startHour + \".0\" + startMin\n                } else {\n                    hour = startHour + \".\" + startMin\n                }\n            }\n        }\n\n        setScheduleRows(scheduleArray)\n\n    }, [slots, semester, lessonID])\n\n    const selectSlots = (newSlot) => {\n        if (slots.includes(newSlot)) {\n            setSlots(slots.filter((slot) => slot !== newSlot))\n        } else {\n            setSlots([...slots, newSlot])\n        }\n    }\n\n    const addLesson = (e) => {\n        e.preventDefault()\n\n        slots.sort()\n\n        let apiInstance = new Kucukdevapi.LessonsApi();\n        let lessonModel = new Kucukdevapi.LessonModel(lessonName, instrutcorName, absenceLimit, slots);\n        apiInstance.createLesson(uid, sid, lessonModel, (error, data, response) => {\n            if (error) {\n                console.error(error);\n                if (error.response.status === 401) {\n                    setLogin(false)\n                }\n            } else {\n                console.log('API called successfully. Returned data: ' + data);\n            }\n        });\n\n        history.push(\"/lessons\")\n    }\n\n    const updateLesson = (e) => {\n        e.preventDefault()\n\n        slots.sort()\n\n        let apiInstance = new Kucukdevapi.LessonsApi();\n        let lid = lessonID;\n        let updateLessonModel = new Kucukdevapi.UpdateLessonModel(lessonName, instrutcorName, absenceLimit, slots);\n        apiInstance.updateLesson(uid, sid, lid, updateLessonModel, (error, data, response) => {\n            if (error) {\n                console.error(error);\n                if (error.response.status === 401) {\n                    setLogin(false)\n                }\n            } else {\n                console.log('API called successfully. Returned data: ' + data);\n            }\n        });\n\n        history.push(\"/lessons\")\n    }\n\n\n    return (\n        <div className=\"flex flex-col mt-4 xl:mx-40\">\n            <div className=\"flex flex-row justify-around mb-4\">\n                <Link to=\"/lessons\" className=\"text-gray-800 text-base font-semibold hover:text-purple-600 mb-1 md:hidden\">Show Lessons</Link>\n                <Link to=\"/lessons/add-lesson\" className=\"text-gray-800 text-base font-semibold hover:text-purple-600 mb-1 md:hidden\">Add Lesson</Link>\n                <Link to=\"/lessons/add-from-uis\" className=\"text-gray-800 text-base font-semibold hover:text-purple-600 mb-1 md:hidden\">Add from UIS</Link>\n            </div>\n            <div className=\"flex h-full\">\n                <div className=\"flex bg-white shadow-xl rounded flex-col w-full mx-auto mt-2\">\n                    <div className=\"w-full flex flex-col md:flex-row\">\n                        <div\n                            className=\"w-full h-auto lg:block lg:w-7/12 bg-cover rounded-l-lg\">\n                            <h1 className=\"flex justify-center md:justify-start text-2xl ml-4 my-2\">{lessonID ? \"Select Updated Hours\" : \"Select Hours\"}</h1>\n                            <table className=\"min-w-full\">\n                                <thead>\n                                    <tr className=\"\">\n                                        <th className=\"px-6 py-2 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">#</th>\n                                        <th className=\"px-3 py-2 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Mon</th>\n                                        <th className=\"px-3 py-2 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Tue</th>\n                                        <th className=\"px-3 py-2 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Wed</th>\n                                        <th className=\"px-3 py-2 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Thu</th>\n                                        <th className=\"px-3 py-2 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Fri</th>\n\n                                    </tr>\n                                </thead>\n                                <tbody className=\"bg-white\">\n                                    {scheduleRows}\n                                </tbody>\n                            </table>\n                            <p className=\"flex justify-center md:justify-end text-xs italic text-red-500 ml-4 my-2\">*You can select slots of the lesson from the table.</p>\n\n                        </div>\n                        <div className=\"w-full lg:w-5/12 bg-white p-5 rounded-lg lg:rounded-l-none mx-auto\">\n                            <h3 className=\"pt-4 text-2xl text-center\">{lessonID ? \"Update Lesson\" : \"Add Lesson!\"}</h3>\n                            <form onSubmit={lessonID ? (e) => updateLesson(e) : (e) => addLesson(e)} className=\"px-8 pt-6 pb-8 mb-4 bg-white rounded\">\n                                <div className=\"mb-4\">\n                                    <label className=\"block mb-2 text-base font-bold text-gray-700\">\n                                        Lesson Name\n                                    </label>\n                                    <input\n                                        className=\"w-full px-3 py-2 mb-3 text-base leading-medium text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\n                                        id=\"lessonName\"\n                                        type=\"text\"\n                                        placeholder=\"EE213\"\n                                        defaultValue={lessonID && lessonName}\n                                        name=\"lessonName\"\n                                        onChange={(e) => setLessonName(e.target.value)}\n                                        required\n                                    />\n                                </div>\n                                <div className=\"mb-4\">\n                                    <label className=\"block mb-2 text-base font-bold text-gray-700\">\n                                        Instructor Name\n            </label>\n                                    <input\n                                        className=\"w-full px-3 py-2 mb-3 text-base leading-medium text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\n                                        id=\"instructorName\"\n                                        type=\"text\"\n                                        placeholder=\"John Doe\"\n                                        defaultValue={lessonID && instrutcorName}\n                                        name=\"instructorName\"\n                                        onChange={(e) => setInstructorName(e.target.value)}\n                                        required\n                                    />\n                                </div>\n                                <div className=\"mb-4\">\n                                    <div className=\"w-full mb-4 md:mr-2 md:mb-0\">\n                                        <label className=\"block mb-2 text-base font-bold text-gray-700\">\n                                            Absence Limit\n                </label>\n                                        <input\n                                            className=\"w-full px-3 py-2 mb-3 text-base leading-medium text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\n                                            id=\"absenceLimit\"\n                                            type=\"number\"\n                                            placeholder=\"20\"\n                                            value={absenceLimit}\n                                            name=\"absenceLimit\"\n                                            min=\"0\"\n                                            onChange={(e) => setAbsenceLimit(e.target.value)}\n                                            required\n                                        />\n                                        <div className=\"text-right\">\n                                            <button\n                                                type=\"button\"\n                                                style={{ transition: \"all .15s ease\" }}\n                                                onClick={() => setCalculateModal(true)}\n                                                className=\"inline-block text-sm text-blue-500 align-baseline hover:text-blue-800\"\n                                            >\n                                                Calculate!\n            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"mb-6 text-center\">\n                                    <button\n                                        className={`w-full px-4 py-2 font-bold text-white ${lessonID ? \"bg-yellow-400 hover:bg-yellow-500\" : \"bg-blue-500 hover:bg-blue-700\"} rounded-full  focus:outline-none focus:shadow-outline`}\n                                        type=\"submit\"\n                                    >\n                                        {lessonID ? \"Update The Lesson\" : \"Add The Lesson\"}\n                                    </button>\n                                </div>\n                                <hr className=\"mb-6 border-t\" />\n\n\n                            </form>\n                        </div>\n\n                    </div>\n                </div>\n            </div >\n            {calculateModal ? (\n                <div>\n                    <div\n                        className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\n                    >\n                        <div className=\"relative w-auto my-6 mx-auto max-w-3xl\">\n                            {/*content*/}\n                            <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\n                                {/*header*/}\n                                <div className=\"flex items-start justify-between p-5 border-b border-solid border-gray-300 rounded-t\">\n                                    <h3 className=\"pt-4 text-2xl text-center\">Calculate Absence Limit!</h3>\n\n                                    <button\n                                        className=\"p-1 ml-auto bg-transparent border-0 text-black opacity-5 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\n                                        onClick={() => setCalculateModal(false)}\n                                    >\n                                        <span className=\"bg-transparent text-black opacity-5 h-6 w-6 text-2xl block outline-none focus:outline-none\">\n                                            ×\n                    </span>\n                                    </button>\n                                </div>\n                                {/*body*/}\n                                <form className=\"px-8 pt-6 pb-8 bg-white rounded\">\n                                    <div className=\"mb-4\">\n                                        <label className=\"block mb-2 text-base font-bold text-gray-700\">\n                                            Number of Weeks\n            </label>\n                                        <input\n                                            className=\"w-full px-3 py-2 mb-3 text-base leading-medium text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\n                                            id=\"numOfWeeks\"\n                                            type=\"number\"\n                                            name=\"numOfWeeks\"\n                                            value={numOfWeeks}\n                                            onChange={(e) => setNumOfWeeks(e.target.value)}\n                                        />\n                                        <p className=\"flex justify-center text-xs italic text-red-500 my-2\">It is always safer to choose week number less than what you think, so you will not have an unpleasent surprise.</p>\n\n                                    </div>\n                                    <div className=\"mb-4\">\n                                        <label className=\"block mb-2 text-base font-bold text-gray-700\">\n                                            Lesson Count Per Week\n            </label>\n                                        <input\n                                            className=\"w-full px-3 py-2 mb-3 text-base leading-medium text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\n                                            id=\"lessonPerWeek\"\n                                            type=\"number\"\n                                            name=\"lessonPerWeek\"\n                                            value={lessonPerWeek}\n                                            onChange={(e) => setLessonPerWeek(e.target.value)}\n                                        />\n                                    </div>\n                                    <div className=\"mb-4\">\n                                        <div className=\"w-full mb-4 md:mr-2 md:mb-0\">\n                                            <label className=\"block mb-2 text-base font-bold text-gray-700\">\n                                                Max Absence Percentage\n                </label>\n                                            <input\n                                                className=\"w-full px-3 py-2 mb-3 text-base leading-medium text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\n                                                id=\"maxPercentage\"\n                                                type=\"number\"\n                                                placeholder=\"20\"\n                                                name=\"maxPercentage\"\n                                                value={maxPercentage}\n                                                onChange={(e) => setMaxPercentage(e.target.value)}\n                                            />\n                                        </div>\n                                    </div>\n                                    <h1 className=\"flex justify-center text-2xl\">{Math.round((((numOfWeeks * lessonPerWeek) / 100) * maxPercentage) * 100) / 100} Hours</h1>\n                                </form>\n                                {/*footer*/}\n                                <div className=\"flex items-center justify-end p-6 border-t border-solid border-gray-300 rounded-b\">\n                                    <button\n                                        className=\"text-red-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1\"\n                                        type=\"button\"\n                                        style={{ transition: \"all .15s ease\" }}\n                                        onClick={() => setCalculateModal(false)}\n                                    >\n                                        Close\n                  </button>\n                                    <button\n                                        className=\"bg-green-500 text-white active:bg-green-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1\"\n                                        type=\"button\"\n                                        style={{ transition: \"all .15s ease\" }}\n                                        onClick={() => {\n                                            setAbsenceLimit(parseInt((((numOfWeeks * lessonPerWeek) / 100) * maxPercentage)))\n                                            setCalculateModal(false)\n                                        }\n                                        }\n                                    >\n                                        Use This Value\n                  </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\n                </div>\n            ) : null}\n        </div>\n    )\n}\n\nexport default AddLesson\n","/frontend/src/components/LessonDetail.js",[],"/frontend/src/components/Overview.js",[],"/frontend/src/components/Attendance.js",["94"],"import { useState, useEffect, useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserContext } from '../Context';\n\nvar Kucukdevapi = require('kucukdevapi');\n\nconst Attendance = ({ history }) => {\n    const [login, setLogin] = useContext(UserContext);\n\n    const [semester, setSemester] = useState({});\n    const [lessons, setLessons] = useState([]);\n    const [week, setWeek] = useState(1)\n    const [scheduleRows, setScheduleRows] = useState([])\n\n    const [oldAbsences, setOldAbsences] = useState([])\n    const [oldAbsenceIDs, setOldAbsenceIDs] = useState([])\n    const [absenceIDs, setAbsenceIDs] = useState([])\n    const [absences, setAbsences] = useState([])\n    const [presenceIDs, setPresenceIDs] = useState([])\n    const [presences, setPresences] = useState([])\n\n    let defaultClient = Kucukdevapi.ApiClient.instance;\n    let OAuth2PasswordBearer = defaultClient.authentications[\"OAuth2PasswordBearer\"];\n    OAuth2PasswordBearer.accessToken = login.userToken;\n    let uid = login.userID;\n    let sid = login.semesterID;\n\n    const weeksBetween = Math.round((semester.endDate - semester.startDate) / (7 * 24 * 60 * 60 * 1000))\n\n    useEffect(() => {\n        if (login) {\n            let smestersApiInstance = new Kucukdevapi.SemestersApi();\n            smestersApiInstance.getSingleSemester(uid, sid, (error, data, response) => {\n                if (error) {\n                    console.error(error);\n                    if (error.response.status === 401) {\n                        setLogin(false)\n                    }\n                } else {\n                    console.log(\"API called successfully. Returned data: \" + data);\n                    setSemester(data);\n                    let curWeek = Math.ceil((Date.now() - data.startDate) / (7 * 24 * 60 * 60 * 1000) + 0.15)\n                    if (curWeek < 0) {\n                        curWeek = String(1)\n                    } else if (curWeek > weeksBetween) {\n                        curWeek = String(weeksBetween)\n                    } else {\n                        curWeek = String(curWeek)\n                    }\n                    setWeek(curWeek)\n                }\n            });\n\n            let lessonsApiInstance = new Kucukdevapi.LessonsApi();\n            lessonsApiInstance.listLessonsOfSemester(\n                uid,\n                sid,\n                (error, data, response) => {\n                    if (error) {\n                        console.error(error);\n                        if (error.response.status === 401) {\n                            setLogin(false)\n                        }\n                    } else {\n                        console.log(\"API called successfully. Returned data: \" + data);\n                        setLessons(data);\n\n                        const absenceArray = []\n                        const absenceIDArray = []\n                        for (let i = 0; i < data.length; i++) {\n                            for (let j = 0; j < data[i].absences.length; j++) {\n                                absenceArray.push(data[i].absences[j])\n                                absenceIDArray.push(data[i]._id)\n                            }\n                        }\n\n                        setOldAbsences(absenceArray)\n                        setOldAbsenceIDs(absenceIDArray)\n                        setAbsences(absenceArray)\n                        setAbsenceIDs(absenceIDArray)\n                    }\n                }\n            );\n        } else {\n            history.push(\"/signin\")\n        }\n\n    }, [uid, sid, login, setLogin, history, weeksBetween]);\n\n    let strCol = \"240,196,196x220,196,240x255,194,126x255,240,126x202,255,126x126,246,255x126,200,255x184,126,255x238,126,255x126,128,255x255,126,194x196,224,240x126,255,219x196,240,229x243,255,126x126,255,128\"\n    let colorArray = strCol.split(\"x\")\n\n    // const colorArray = [\n    //     \"bg-gray-400\",\n    //     \"bg-red-600\",\n    //     \"bg-yellow-500\",\n    //     \"bg-green-600\",\n    //     \"bg-blue-300\",\n    //     \"bg-indigo-300\",\n    //     \"bg-purple-600\",\n    //     \"bg-pink-600\",\n    //     \"bg-gray-900\",\n    //     \"bg-green-900\",\n    //     \"bg-indigo-900\",\n    //     \"bg-purple-900\",\n    //     \"bg-pink-900\",\n    // ];\n\n    useEffect(() => {\n        let lessonSlots = {\n            0: {},\n            1: {},\n            2: {},\n            3: {},\n            4: {},\n        };\n\n        for (let i = 0; i < lessons.length; i++) {\n            for (let j = 0; j < lessons[i].slots.length; j++) {\n                const day_hour = lessons[i].slots[j].split(\",\");\n                if (!lessonSlots[day_hour[0]][day_hour[1]])\n                    lessonSlots[day_hour[0]][day_hour[1]] = [];\n                const arr = absences.filter((absence, index) => absence === `${week},${day_hour[0]},${day_hour[1]}` && absenceIDs[index] === lessons[i]._id)\n                const flag = arr.length > 0\n                lessonSlots[day_hour[0]][day_hour[1]].push({\n                    id: lessons[i]._id,\n                    name: lessons[i].name,\n                    color: colorArray[i % colorArray.length],\n                    flag: !flag\n                });\n            }\n        }\n\n        let hour = String(semester.startHour);\n        let resStart = hour.split(\".\");\n        let startHour = Number(resStart[0]);\n        let startMin = Number(resStart[1]);\n\n        const period = semester.dLesson + semester.dBreak;\n        const periodHour = parseInt(period / 60);\n        const periodMin = period % 60;\n\n        const scheduleArray = [];\n        for (let index = 1; index <= semester.slotCount; index++) {\n            scheduleArray.push(\n                <tr key={index}>\n                    <td className=\"px-6 pb-2 border-b text-blue-900 border-gray-500 text-sm leading-5\">\n                        {hour}\n                    </td>\n                    <td\n                        className={`border border-gray-500 text-blue-900 text-sm leading-5`}\n                    >\n                        {lessonSlots[0][index] &&\n                            lessonSlots[0][index].map((l) => (\n                                <div style={{ backgroundColor: `rgb(${l.color})` }} className=\"py-1 m-1\"><Link className=\"hover:underline\" to={`/lessons/${l.id}`}>{l.name}</Link> <input className=\"ml-2\" onChange={(e) => selectAbsences(e, `${week},0,${index}`, l)} checked={l.flag} type=\"checkbox\" /></div>\n                            ))}\n                    </td>\n                    <td\n                        className={`border border-gray-500 text-blue-900 text-sm leading-5`}\n                    >\n                        {lessonSlots[1][index] &&\n                            lessonSlots[1][index].map((l) => (\n                                <div style={{ backgroundColor: `rgb(${l.color})` }} className=\"py-1 m-1\"><Link className=\"hover:underline\" to={`/lessons/${l.id}`}>{l.name}</Link> <input className=\"ml-2\" onChange={(e) => selectAbsences(e, `${week},1,${index}`, l)} checked={l.flag} type=\"checkbox\" /></div>\n                            ))}\n                    </td>\n                    <td\n                        className={`border border-gray-500 text-blue-900 text-sm leading-5`}\n                    >\n                        {lessonSlots[2][index] &&\n                            lessonSlots[2][index].map((l) => (\n                                <div style={{ backgroundColor: `rgb(${l.color})` }} className=\"py-1 m-1\"><Link className=\"hover:underline\" to={`/lessons/${l.id}`}>{l.name}</Link> <input className=\"ml-2\" onChange={(e) => selectAbsences(e, `${week},2,${index}`, l)} checked={l.flag} type=\"checkbox\" /></div>\n                            ))}\n                    </td>\n                    <td\n                        className={`border border-gray-500 text-blue-900 text-sm leading-5`}\n                    >\n                        {lessonSlots[3][index] &&\n                            lessonSlots[3][index].map((l) => (\n                                <div style={{ backgroundColor: `rgb(${l.color})` }} className=\"py-1 m-1\"><Link className=\"hover:underline\" to={`/lessons/${l.id}`}>{l.name}</Link> <input className=\"ml-2\" onChange={(e) => selectAbsences(e, `${week},3,${index}`, l)} checked={l.flag} type=\"checkbox\" /></div>\n                            ))}\n                    </td>\n                    <td\n                        className={`border-b border-gray-500 text-blue-900 text-sm leading-5`}\n                    >\n                        {lessonSlots[4][index] &&\n                            lessonSlots[4][index].map((l) => (\n                                <div style={{ backgroundColor: `rgb(${l.color})` }} className=\"py-1 m-1\"><Link className=\"hover:underline\" to={`/lessons/${l.id}`}>{l.name}</Link> <input className=\"ml-2\" onChange={(e) => selectAbsences(e, `${week},4,${index}`, l)} checked={l.flag} type=\"checkbox\" /></div>\n                            ))}\n                    </td>\n                </tr>\n            );\n\n            startHour += periodHour;\n            startMin += periodMin;\n\n            if (startMin >= 60) {\n                startHour += 1;\n                startMin = startMin % 60;\n            }\n\n            if (startMin < 10) {\n                hour = startHour + \".0\" + startMin;\n            } else {\n                hour = startHour + \".\" + startMin;\n            }\n        }\n\n        setScheduleRows(scheduleArray)\n\n    }, [semester, lessons, absenceIDs, week, absences, presences])\n\n\n    const selectAbsences = (e, newAbs, l) => {\n        if (e.target.checked) {\n            let place;\n            for (let i = 0; i < absences.length; i++) {\n                if (absences[i] === newAbs && absenceIDs[i] === l.id) {\n                    place = i\n                }\n            }\n            setAbsenceIDs(absenceIDs.filter((id, index) => index !== place))\n            setAbsences(absences.filter((absence, index) => index !== place))\n            setPresenceIDs([...presenceIDs, l.id])\n            setPresences([...presences, newAbs])\n        } else {\n            let place;\n            for (let i = 0; i < presences.length; i++) {\n                if (presences[i] === newAbs && presenceIDs[i] === l.id) {\n                    place = i\n                }\n            }\n            setAbsenceIDs([...absenceIDs, l.id])\n            setAbsences([...absences, newAbs])\n            setPresenceIDs(presenceIDs.filter((id, index) => index !== place))\n            setPresences(presences.filter((presence, index) => index !== place))\n        }\n    }\n\n    const setNext = () => {\n        if (Number(week) + 1 <= weeksBetween) {\n            let cWeek = Number(week) + 1\n            setWeek(String(cWeek))\n        }\n    }\n\n    const setPrevious = () => {\n        if (Number(week) - 1 > 0) {\n            let cWeek = Number(week) - 1\n            setWeek(String(cWeek))\n        }\n    }\n\n    const saveWeek = () => {\n        const indexes = []\n        for (let i = 0; i < absences.length; i++) {\n            for (let j = 0; j < oldAbsences.length; j++) {\n                if (absences[i] === oldAbsences[j] && absenceIDs[i] === oldAbsenceIDs[j]) {\n                    indexes.push(i)\n                }\n            }\n        }\n\n        let indexAbsence = [...absences]\n        let indexID = [...absenceIDs]\n\n        indexAbsence = indexAbsence.filter((absence, index) => -1 === indexes.indexOf((index)))\n        indexID = indexID.filter((id, index) => -1 === indexes.indexOf((index)))\n\n        let apiInstance = new Kucukdevapi.LessonsApi();\n\n        for (let k = 0; k < indexAbsence.length; k++) {\n            let lid = indexID[k];\n            let absenceModel = new Kucukdevapi.AbsenceModel(indexAbsence[k]);\n            apiInstance.createAbsence(uid, sid, lid, absenceModel, (error, data, response) => {\n                if (error) {\n                    console.error(error);\n                } else {\n                    console.log('API called successfully. Returned data: ' + data);\n                }\n            });\n        }\n\n        for (let l = 0; l < presences.length; l++) {\n            let lid = presenceIDs[l];\n            let absenceModel = new Kucukdevapi.AbsenceModel(presences[l]);\n            apiInstance.deleteAbsence(uid, sid, lid, absenceModel, (error, data, response) => {\n                if (error) {\n                    console.error(error);\n                } else {\n                    console.log('API called successfully. Returned data: ' + data);\n                }\n            });\n        }\n\n    }\n\n\n    return (\n        <div className=\"flex flex-col mt-8 xl:mx-40\">\n            <h1 className=\"flex justify-start text-2xl ml-8 md:ml-4\">Your Attendance <div className=\"font-extralight ml-2\">Week {week}</div></h1>\n            <div className=\"py-2 overflow-x-auto sm:px-6 pr-10 lg:px-8\">\n                <div className=\"align-middle inline-block min-w-full shadow overflow-hidden bg-white shadow-dashboard px-8 pt-2 rounded-bl-lg rounded-br-lg\">\n                    <table className=\"min-w-full\">\n                        <thead>\n                            <tr className=\"\">\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm text-left leading-4 text-blue-500 tracking-wider\">#</th>\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Monday</th>\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Tuesday</th>\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Wednesday</th>\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Thursday</th>\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Friday</th>\n\n                            </tr>\n                        </thead>\n                        <tbody className=\"bg-white  \">\n                            {scheduleRows}\n                        </tbody>\n                    </table>\n                    <div className=\"flex flex-row justify-between\">\n                        <div className=\"flex text-xs md:text-base my-4\">\n                            <button onClick={() => saveWeek()}\n\n                                className=\"px-8 py-2 font-bold text-white bg-blue-500 rounded-full hover:bg-blue-700 focus:outline-none focus:shadow-outline\"\n\n                            >\n                                Save All Changes\n                </button>\n                        </div>\n\n                        <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-end my-4 work-sans\">\n                            <div>\n                                <nav className=\"relative z-0 inline-flex shadow-sm\">\n                                    <div>\n                                        <button onClick={() => setPrevious()} className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-500 hover:text-gray-400 focus:z-10 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100 active:text-gray-500 transition ease-in-out duration-150\" aria-label=\"Previous\">\n                                            <svg className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                                <path fillRule=\"evenodd\" d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                                            </svg>\n                                        </button>\n                                    </div>\n                                    <div v-if=\"pagination.current_page < pagination.last_page\">\n                                        <button onClick={() => setNext()} className=\"-ml-px relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-500 hover:text-gray-400 focus:z-10 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100 active:text-gray-500 transition ease-in-out duration-150\" aria-label=\"Next\">\n                                            <svg className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                                <path fillRule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\n                                            </svg>\n                                        </button>\n                                    </div>\n                                </nav>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Attendance\n","/frontend/src/forms/Register.js",[],"/frontend/src/forms/Login.js",[],"/frontend/src/forms/AddUpdateSemester.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":32,"column":8,"nodeType":"101","endLine":32,"endColumn":16,"suggestions":"102"},{"ruleId":"99","severity":1,"message":"103","line":114,"column":8,"nodeType":"101","endLine":114,"endColumn":35,"suggestions":"104"},{"ruleId":"99","severity":1,"message":"105","line":210,"column":8,"nodeType":"101","endLine":210,"endColumn":66,"suggestions":"106"},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'slots'. Either include it or remove the dependency array.","ArrayExpression",["109"],"React Hook useEffect has a missing dependency: 'selectSlots'. Either include it or remove the dependency array.",["110"],"React Hook useEffect has missing dependencies: 'colorArray' and 'selectAbsences'. Either include them or remove the dependency array.",["111"],"no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},"Update the dependencies array to be: [lesson, slots]",{"range":"118","text":"119"},"Update the dependencies array to be: [slots, semester, lessonID, selectSlots]",{"range":"120","text":"121"},"Update the dependencies array to be: [semester, lessons, absenceIDs, week, absences, presences, colorArray, selectAbsences]",{"range":"122","text":"123"},[1031,1039],"[lesson, slots]",[4952,4979],"[slots, semester, lessonID, selectSlots]",[9368,9426],"[semester, lessons, absenceIDs, week, absences, presences, colorArray, selectAbsences]"]