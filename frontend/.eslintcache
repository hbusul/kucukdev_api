[{"/frontend/src/index.js":"1","/frontend/src/reportWebVitals.js":"2","/frontend/src/App.js":"3","/frontend/src/layout/Navbar.js":"4","/frontend/src/pages/NotFound.js":"5","/frontend/src/components/Semester.js":"6","/frontend/src/components/Home.js":"7","/frontend/src/components/ResetPassword.js":"8","/frontend/src/Context.js":"9","/frontend/src/components/Semesters.js":"10","/frontend/src/components/SemesterDetail.js":"11","/frontend/src/components/AddUISLesson.js":"12","/frontend/src/components/Lesson.js":"13","/frontend/src/components/Lessons.js":"14","/frontend/src/forms/AddUpdateLesson.js":"15","/frontend/src/components/LessonDetail.js":"16","/frontend/src/components/Overview.js":"17","/frontend/src/components/Attendance.js":"18","/frontend/src/forms/Register.js":"19","/frontend/src/forms/Login.js":"20","/frontend/src/forms/AddUpdateSemester.js":"21"},{"size":614,"mtime":1614020352085,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1614020352089,"results":"24","hashOfConfig":"23"},{"size":2130,"mtime":1614178021218,"results":"25","hashOfConfig":"23"},{"size":9760,"mtime":1614338097442,"results":"26","hashOfConfig":"23"},{"size":185,"mtime":1614020352089,"results":"27","hashOfConfig":"23"},{"size":7130,"mtime":1614061141537,"results":"28","hashOfConfig":"23"},{"size":663,"mtime":1614020352085,"results":"29","hashOfConfig":"23"},{"size":3569,"mtime":1614020352085,"results":"30","hashOfConfig":"23"},{"size":527,"mtime":1614020352085,"results":"31","hashOfConfig":"23"},{"size":9003,"mtime":1614020988633,"results":"32","hashOfConfig":"23"},{"size":14769,"mtime":1614330630599,"results":"33","hashOfConfig":"23"},{"size":751,"mtime":1614020352085,"results":"34","hashOfConfig":"23"},{"size":6919,"mtime":1614337879939,"results":"35","hashOfConfig":"23"},{"size":8338,"mtime":1614020352085,"results":"36","hashOfConfig":"23"},{"size":21177,"mtime":1614020352085,"results":"37","hashOfConfig":"23"},{"size":14831,"mtime":1614337804331,"results":"38","hashOfConfig":"23"},{"size":9150,"mtime":1614339778038,"results":"39","hashOfConfig":"23"},{"size":17017,"mtime":1614339748250,"results":"40","hashOfConfig":"23"},{"size":7961,"mtime":1614020352085,"results":"41","hashOfConfig":"23"},{"size":7600,"mtime":1614020352085,"results":"42","hashOfConfig":"23"},{"size":16875,"mtime":1614177989390,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"u0vdh2",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/frontend/src/index.js",[],["90","91"],"/frontend/src/reportWebVitals.js",[],"/frontend/src/App.js",[],"/frontend/src/layout/Navbar.js",[],"/frontend/src/pages/NotFound.js",[],"/frontend/src/components/Semester.js",[],"/frontend/src/components/Home.js",[],"/frontend/src/components/ResetPassword.js",[],"/frontend/src/Context.js",[],"/frontend/src/components/Semesters.js",[],"/frontend/src/components/SemesterDetail.js",[],"/frontend/src/components/AddUISLesson.js",[],"/frontend/src/components/Lesson.js",["92","93"],"import { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Lesson = ({ lesson, onDeleteLesson }) => {\n    const [lessonDeleteModal, setLessonDeleteModal] = useState(false);\n    const [slots] = useState(lesson.slots)\n    const [fixedSlots, setFixedSlots] = useState([])\n\n    useEffect(() => {\n        const days = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\"]\n\n        let daySlot = [[], [], [], [], []]\n\n        let day = 0\n        for (let i = 0; i < slots.length; i++) {\n            const resSlot = slots[i].split(\",\")\n            daySlot[resSlot[0]].push(resSlot[1])\n        }\n\n        let cDay;\n        const fixedSlot = []\n        for (let j = 0; j < daySlot.length; j++) {\n            daySlot[j].length > 0 ? cDay = `${days[j]} ` : cDay = \"null\"\n            for (let k = 0; k < daySlot[j].length; k++) {\n                cDay += `${daySlot[j][k]}`\n                if (k < daySlot[j].length - 1) cDay += \",\"\n            }\n            cDay !== \"null\" && fixedSlot.push(`${cDay} `)\n        }\n\n        setFixedSlots(fixedSlot)\n\n    }, [lesson])\n\n    return (\n        <tr>\n            <td className=\"px-6 py-4 whitespace-no-wrap border-b border-gray-500\">\n                <div className=\"text-sm text-left leading-5 text-blue-900\">{lesson.name}</div>\n            </td>\n            <td className=\"px-6 py-4 whitespace-no-wrap border-b text-blue-900 border-gray-500 text-sm leading-5\">{fixedSlots.map((slot, index) => <p key={index}>{slot}</p>)}</td>\n            <td className=\"px-6 py-4 whitespace-no-wrap border-b text-blue-900 border-gray-500 text-sm leading-5\">{(lesson.absences).length}</td>\n            <td className=\"px-6 py-4 whitespace-no-wrap border-b text-blue-900 border-gray-500 text-sm leading-5\">\n                <div className=\"flex justify-evenly flex-col md:flex-row\">\n                    <span className=\"relative inline-block px-3 py-1 font-semibold text-green-900 leading-tight\">\n                        <span aria-hidden className=\"absolute inset-0 bg-yellow-300 rounded-full\"></span>\n                        <Link to={{ pathname: `/lessons/update-lesson/${lesson._id}` }} className=\"relative text-xs font-bold\">Edit</Link>\n\n                    </span>\n                    <span className=\"relative inline-block px-3 py-1 font-semibold text-green-900 leading-tight\">\n                        <span aria-hidden className=\"absolute inset-0 bg-red-500 opacity-90 rounded-full\"></span>\n                        <button onClick={() => setLessonDeleteModal(true)} type=\"button\"\n                            style={{ transition: \"all .15s ease\" }} className=\"relative text-xs font-bold\">Delete</button>\n                    </span>\n                    <span className=\"relative inline-block px-3 py-1 font-semibold text-green-900 leading-tight\">\n                        <span aria-hidden className=\"absolute inset-0 bg-green-500 opacity-90 rounded-full\"></span>\n                        <Link to={`/lessons/${lesson._id}`} className=\"relative text-xs font-bold\">View</Link>\n                    </span>\n                    {lessonDeleteModal ? (\n                        <div>\n                            <div\n                                className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\n                            >\n                                <div className=\"relative w-auto my-6 mx-auto max-w-3xl\">\n                                    {/*content*/}\n                                    <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\n                                        {/*header*/}\n                                        <div className=\"flex items-start justify-between p-5 border-b border-solid border-gray-300 rounded-t\">\n                                            <h3 className=\"pt-4 text-2xl text-center\">Delete lesson: {lesson.name}</h3>\n\n                                            <button\n                                                className=\"p-1 ml-auto bg-transparent border-0 text-black opacity-5 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\n                                                onClick={() => setLessonDeleteModal(false)}\n                                            >\n                                                <span className=\"bg-transparent text-black opacity-5 h-6 w-6 text-2xl block outline-none focus:outline-none\">\n                                                    ×\n                    </span>\n                                            </button>\n                                        </div>\n                                        {/*body*/}\n                                        <p className=\"flex justify-center text-base m-8\">You will lose everything belongs to this lesson irreversibly!</p>\n                                        {/*footer*/}\n                                        <div className=\"flex items-center justify-end p-6 border-t border-solid border-gray-300 rounded-b\">\n                                            <button\n                                                className=\"background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1\"\n                                                type=\"button\"\n                                                style={{ transition: \"all .15s ease\" }}\n                                                onClick={() => setLessonDeleteModal(false)}\n                                            >\n                                                Close\n                  </button>\n                                            <button\n                                                className=\"bg-red-500 text-white active:bg-red-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1\"\n                                                type=\"button\"\n                                                style={{ transition: \"all .15s ease\" }}\n                                                onClick={() => {\n                                                    setLessonDeleteModal(false)\n                                                    onDeleteLesson()\n                                                }\n                                                }\n                                            >\n                                                Delete Anyway\n                  </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\n                        </div>\n                    ) : null}\n                </div>\n            </td>\n        </tr>\n    )\n}\n\nexport default Lesson\n","/frontend/src/components/Lessons.js",[],"/frontend/src/forms/AddUpdateLesson.js",["94"],"import { useState, useEffect, useContext } from 'react'\nimport { Link } from \"react-router-dom\";\nimport { UserContext } from '../Context';\n\nvar Kucukdevapi = require('kucukdevapi');\n\n\nconst AddLesson = ({ history, match }) => {\n    const [login, setLogin] = useContext(UserContext);\n\n    const [semester, setSemester] = useState({})\n    const [calculateModal, setCalculateModal] = useState(false);\n\n    const [slots, setSlots] = useState([])\n    const [lessonName, setLessonName] = useState(\"\")\n    const [instrutcorName, setInstructorName] = useState(\"\")\n    const [absenceLimit, setAbsenceLimit] = useState(0)\n    const [numOfWeeks, setNumOfWeeks] = useState(14)\n    const [lessonPerWeek, setLessonPerWeek] = useState(5)\n    const [maxPercentage, setMaxPercentage] = useState(30)\n    const [scheduleRows, setScheduleRows] = useState([])\n\n    const lessonID = match.params.id\n\n    let defaultClient = Kucukdevapi.ApiClient.instance;\n    let OAuth2PasswordBearer = defaultClient.authentications['OAuth2PasswordBearer'];\n    OAuth2PasswordBearer.accessToken = login.userToken;\n    let uid = login.userID;\n    let sid = login.semesterID;\n\n    useEffect(() => {\n        if (login) {\n            if (lessonID) {\n                let apiInstance = new Kucukdevapi.LessonsApi();\n                let lid = lessonID;\n                apiInstance.getSingleLesson(uid, sid, lid, (error, data, response) => {\n                    if (error) {\n                        console.error(error);\n                        if (error.response.status === 401) {\n                            setLogin(false)\n                        }\n                    } else {\n                        console.log('API called successfully. Returned data: ' + data);\n                        setAbsenceLimit(data.absenceLimit)\n                        setLessonName(data.name)\n                        setInstructorName(data.instructor)\n                        setSlots(data.slots)\n                    }\n                });\n            } else {\n                setSlots([])\n                setAbsenceLimit(0)\n            }\n\n            let apiInstance = new Kucukdevapi.SemestersApi();\n            apiInstance.getSingleSemester(uid, sid, (error, data, response) => {\n                if (error) {\n                    console.error(error);\n                    if (error.response.status === 401) {\n                        setLogin(false)\n                    }\n                } else {\n                    console.log('API called successfully. Returned data: ' + data);\n                    setSemester(data)\n                }\n            });\n        } else {\n            history.push(\"/signin\")\n        }\n\n    }, [lessonID, uid, sid, login, setLogin, history])\n\n\n    useEffect(() => {\n        let hour = String(semester.startHour)\n        let resStart = hour.split(\".\")\n        let startHour = Number(resStart[0])\n        let startMin = Number(resStart[1])\n\n        const period = semester.dLesson + semester.dBreak\n        const periodHour = parseInt(period / 60)\n        const periodMin = period % 60\n\n        const scheduleArray = []\n        if (!lessonID || slots.length !== 0 || (slots.length === 0 && lessonID)) {\n            for (let index = 1; index <= semester.slotCount; index++) {\n                scheduleArray.push(<tr key={index}>\n                    <td className=\"px-6 py-1 whitespace-no-wrap border-b text-blue-900 border-gray-500 text-sm leading-5\">{hour}</td>\n                    <td className=\"border border-gray-500 text-blue-900 text-sm leading-5\"><input onChange={() => selectSlots(`0,${index}`)} checked={slots.includes(`0,${index}`)} type=\"checkbox\" /></td>\n                    <td className=\"border border-gray-500 text-blue-900 text-sm leading-5\"><input onChange={() => selectSlots(`1,${index}`)} checked={slots.includes(`1,${index}`)} type=\"checkbox\" /></td>\n                    <td className=\"border text-blue-900 border-gray-500 text-sm leading-5\"><input onChange={() => selectSlots(`2,${index}`)} checked={slots.includes(`2,${index}`)} type=\"checkbox\" /></td>\n                    <td className=\"border text-blue-900 border-gray-500 text-sm leading-5\"><input onChange={() => selectSlots(`3,${index}`)} checked={slots.includes(`3,${index}`)} type=\"checkbox\" /></td>\n                    <td className=\"border-b border-gray-500 text-blue-900 text-sm leading-5\"><input onChange={() => selectSlots(`4,${index}`)} checked={slots.includes(`4,${index}`)} type=\"checkbox\" /></td>\n                </tr >);\n\n                startHour += periodHour\n                startMin += periodMin\n\n                if (startMin >= 60) {\n                    startHour += 1\n                    startMin = startMin % 60\n                }\n\n                if (startMin < 10) {\n                    hour = startHour + \".0\" + startMin\n                } else {\n                    hour = startHour + \".\" + startMin\n                }\n            }\n        }\n\n        setScheduleRows(scheduleArray)\n\n    }, [slots, semester, lessonID])\n\n    const selectSlots = (newSlot) => {\n        if (slots.includes(newSlot)) {\n            setSlots(slots.filter((slot) => slot !== newSlot))\n        } else {\n            setSlots([...slots, newSlot])\n        }\n    }\n\n    const addLesson = (e) => {\n        e.preventDefault()\n\n        slots.sort()\n\n        let apiInstance = new Kucukdevapi.LessonsApi();\n        let lessonModel = new Kucukdevapi.LessonModel(lessonName, instrutcorName, absenceLimit, slots);\n        apiInstance.createLesson(uid, sid, lessonModel, (error, data, response) => {\n            if (error) {\n                console.error(error);\n                if (error.response.status === 401) {\n                    setLogin(false)\n                }\n            } else {\n                console.log('API called successfully. Returned data: ' + data);\n            }\n        });\n\n        history.push(\"/lessons\")\n    }\n\n    const updateLesson = (e) => {\n        e.preventDefault()\n\n        slots.sort()\n\n        let apiInstance = new Kucukdevapi.LessonsApi();\n        let lid = lessonID;\n        let updateLessonModel = new Kucukdevapi.UpdateLessonModel(lessonName, instrutcorName, absenceLimit, slots);\n        apiInstance.updateLesson(uid, sid, lid, updateLessonModel, (error, data, response) => {\n            if (error) {\n                console.error(error);\n                if (error.response.status === 401) {\n                    setLogin(false)\n                }\n            } else {\n                console.log('API called successfully. Returned data: ' + data);\n            }\n        });\n\n        history.push(\"/lessons\")\n    }\n\n\n    return (\n        <div className=\"flex flex-col mt-4 xl:mx-40\">\n            <div className=\"flex flex-row justify-around mb-4\">\n                <Link to=\"/lessons\" className=\"text-gray-800 text-base font-semibold hover:text-purple-600 mb-1 md:hidden\">Show Lessons</Link>\n                <Link to=\"/lessons/add-lesson\" className=\"text-gray-800 text-base font-semibold hover:text-purple-600 mb-1 md:hidden\">Add Lesson</Link>\n                <Link to=\"/lessons/add-from-uis\" className=\"text-gray-800 text-base font-semibold hover:text-purple-600 mb-1 md:hidden\">Add from UIS</Link>\n            </div>\n            <div className=\"flex h-full\">\n                <div className=\"flex bg-white shadow-xl rounded flex-col w-full mx-auto mt-2\">\n                    <div className=\"w-full flex flex-col md:flex-row\">\n                        <div\n                            className=\"w-full h-auto lg:block lg:w-7/12 bg-cover rounded-l-lg\">\n                            <h1 className=\"flex justify-center md:justify-start text-2xl ml-4 my-2\">{lessonID ? \"Select Updated Hours\" : \"Select Hours\"}</h1>\n                            <table className=\"min-w-full\">\n                                <thead>\n                                    <tr className=\"\">\n                                        <th className=\"px-6 py-2 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">#</th>\n                                        <th className=\"px-3 py-2 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Mon</th>\n                                        <th className=\"px-3 py-2 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Tue</th>\n                                        <th className=\"px-3 py-2 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Wed</th>\n                                        <th className=\"px-3 py-2 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Thu</th>\n                                        <th className=\"px-3 py-2 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Fri</th>\n\n                                    </tr>\n                                </thead>\n                                <tbody className=\"bg-white\">\n                                    {scheduleRows}\n                                </tbody>\n                            </table>\n                            <p className=\"flex justify-center md:justify-end text-xs italic text-red-500 ml-4 my-2\">*You can select slots of the lesson from the table.</p>\n\n                        </div>\n                        <div className=\"w-full lg:w-5/12 bg-white p-5 rounded-lg lg:rounded-l-none mx-auto\">\n                            <h3 className=\"pt-4 text-2xl text-center\">{lessonID ? \"Update Lesson\" : \"Add Lesson!\"}</h3>\n                            <form onSubmit={lessonID ? (e) => updateLesson(e) : (e) => addLesson(e)} className=\"px-8 pt-6 pb-8 mb-4 bg-white rounded\">\n                                <div className=\"mb-4\">\n                                    <label className=\"block mb-2 text-base font-bold text-gray-700\">\n                                        Lesson Name\n                                    </label>\n                                    <input\n                                        className=\"w-full px-3 py-2 mb-3 text-base leading-medium text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\n                                        id=\"lessonName\"\n                                        type=\"text\"\n                                        placeholder=\"EE213\"\n                                        defaultValue={lessonID && lessonName}\n                                        name=\"lessonName\"\n                                        onChange={(e) => setLessonName(e.target.value)}\n                                        required\n                                    />\n                                </div>\n                                <div className=\"mb-4\">\n                                    <label className=\"block mb-2 text-base font-bold text-gray-700\">\n                                        Instructor Name\n            </label>\n                                    <input\n                                        className=\"w-full px-3 py-2 mb-3 text-base leading-medium text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\n                                        id=\"instructorName\"\n                                        type=\"text\"\n                                        placeholder=\"John Doe\"\n                                        defaultValue={lessonID && instrutcorName}\n                                        name=\"instructorName\"\n                                        onChange={(e) => setInstructorName(e.target.value)}\n                                        required\n                                    />\n                                </div>\n                                <div className=\"mb-4\">\n                                    <div className=\"w-full mb-4 md:mr-2 md:mb-0\">\n                                        <label className=\"block mb-2 text-base font-bold text-gray-700\">\n                                            Absence Limit\n                </label>\n                                        <input\n                                            className=\"w-full px-3 py-2 mb-3 text-base leading-medium text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\n                                            id=\"absenceLimit\"\n                                            type=\"number\"\n                                            placeholder=\"20\"\n                                            value={absenceLimit}\n                                            name=\"absenceLimit\"\n                                            min=\"0\"\n                                            onChange={(e) => setAbsenceLimit(e.target.value)}\n                                            required\n                                        />\n                                        <div className=\"text-right\">\n                                            <button\n                                                type=\"button\"\n                                                style={{ transition: \"all .15s ease\" }}\n                                                onClick={() => setCalculateModal(true)}\n                                                className=\"inline-block text-sm text-blue-500 align-baseline hover:text-blue-800\"\n                                            >\n                                                Calculate!\n            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"mb-6 text-center\">\n                                    <button\n                                        className={`w-full px-4 py-2 font-bold text-white ${lessonID ? \"bg-yellow-400 hover:bg-yellow-500\" : \"bg-blue-500 hover:bg-blue-700\"} rounded-full  focus:outline-none focus:shadow-outline`}\n                                        type=\"submit\"\n                                    >\n                                        {lessonID ? \"Update The Lesson\" : \"Add The Lesson\"}\n                                    </button>\n                                </div>\n                                <hr className=\"mb-6 border-t\" />\n\n\n                            </form>\n                        </div>\n\n                    </div>\n                </div>\n            </div >\n            {calculateModal ? (\n                <div>\n                    <div\n                        className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\n                    >\n                        <div className=\"relative w-auto my-6 mx-auto max-w-3xl\">\n                            {/*content*/}\n                            <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\n                                {/*header*/}\n                                <div className=\"flex items-start justify-between p-5 border-b border-solid border-gray-300 rounded-t\">\n                                    <h3 className=\"pt-4 text-2xl text-center\">Calculate Absence Limit!</h3>\n\n                                    <button\n                                        className=\"p-1 ml-auto bg-transparent border-0 text-black opacity-5 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\n                                        onClick={() => setCalculateModal(false)}\n                                    >\n                                        <span className=\"bg-transparent text-black opacity-5 h-6 w-6 text-2xl block outline-none focus:outline-none\">\n                                            ×\n                    </span>\n                                    </button>\n                                </div>\n                                {/*body*/}\n                                <form className=\"px-8 pt-6 pb-8 bg-white rounded\">\n                                    <div className=\"mb-4\">\n                                        <label className=\"block mb-2 text-base font-bold text-gray-700\">\n                                            Number of Weeks\n            </label>\n                                        <input\n                                            className=\"w-full px-3 py-2 mb-3 text-base leading-medium text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\n                                            id=\"numOfWeeks\"\n                                            type=\"number\"\n                                            name=\"numOfWeeks\"\n                                            value={numOfWeeks}\n                                            onChange={(e) => setNumOfWeeks(e.target.value)}\n                                        />\n                                        <p className=\"flex justify-center text-xs italic text-red-500 my-2\">It is always safer to choose week number less than what you think, so you will not have an unpleasent surprise.</p>\n\n                                    </div>\n                                    <div className=\"mb-4\">\n                                        <label className=\"block mb-2 text-base font-bold text-gray-700\">\n                                            Lesson Count Per Week\n            </label>\n                                        <input\n                                            className=\"w-full px-3 py-2 mb-3 text-base leading-medium text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\n                                            id=\"lessonPerWeek\"\n                                            type=\"number\"\n                                            name=\"lessonPerWeek\"\n                                            value={lessonPerWeek}\n                                            onChange={(e) => setLessonPerWeek(e.target.value)}\n                                        />\n                                    </div>\n                                    <div className=\"mb-4\">\n                                        <div className=\"w-full mb-4 md:mr-2 md:mb-0\">\n                                            <label className=\"block mb-2 text-base font-bold text-gray-700\">\n                                                Max Absence Percentage\n                </label>\n                                            <input\n                                                className=\"w-full px-3 py-2 mb-3 text-base leading-medium text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\n                                                id=\"maxPercentage\"\n                                                type=\"number\"\n                                                placeholder=\"20\"\n                                                name=\"maxPercentage\"\n                                                value={maxPercentage}\n                                                onChange={(e) => setMaxPercentage(e.target.value)}\n                                            />\n                                        </div>\n                                    </div>\n                                    <h1 className=\"flex justify-center text-2xl\">{Math.round((((numOfWeeks * lessonPerWeek) / 100) * maxPercentage) * 100) / 100} Hours</h1>\n                                </form>\n                                {/*footer*/}\n                                <div className=\"flex items-center justify-end p-6 border-t border-solid border-gray-300 rounded-b\">\n                                    <button\n                                        className=\"text-red-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1\"\n                                        type=\"button\"\n                                        style={{ transition: \"all .15s ease\" }}\n                                        onClick={() => setCalculateModal(false)}\n                                    >\n                                        Close\n                  </button>\n                                    <button\n                                        className=\"bg-green-500 text-white active:bg-green-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1\"\n                                        type=\"button\"\n                                        style={{ transition: \"all .15s ease\" }}\n                                        onClick={() => {\n                                            setAbsenceLimit(parseInt((((numOfWeeks * lessonPerWeek) / 100) * maxPercentage)))\n                                            setCalculateModal(false)\n                                        }\n                                        }\n                                    >\n                                        Use This Value\n                  </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\n                </div>\n            ) : null}\n        </div>\n    )\n}\n\nexport default AddLesson\n","/frontend/src/components/LessonDetail.js",["95"],"import { useEffect, useState, useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserContext } from '../Context';\n\nvar Kucukdevapi = require('kucukdevapi');\n\nconst LessonDetail = ({ history, match }) => {\n    const [login, setLogin] = useContext(UserContext);\n\n    const [lesson, setLesson] = useState({})\n    const [absences, setAbsences] = useState([])\n    const [absenceStr, setAbsenceStr] = useState([])\n    const [slots, setSlots] = useState([])\n    const [fixedSlots, setFixedSlots] = useState([])\n    const [semStartDate, setSemStartDate] = useState(Date.now())\n    const [lessonDeleteModal, setLessonDeleteModal] = useState(false)\n\n\n    const lessonID = match.params.id\n\n    let defaultClient = Kucukdevapi.ApiClient.instance;\n    let OAuth2PasswordBearer = defaultClient.authentications['OAuth2PasswordBearer'];\n    OAuth2PasswordBearer.accessToken = login.userToken;\n\n    let uid = login.userID;\n    let sid = login.semesterID;\n\n    useEffect(() => {\n        if (login) {\n\n            let semesterApiInstance = new Kucukdevapi.SemestersApi();\n            semesterApiInstance.getSingleSemester(uid, sid, (error, data, response) => {\n                if (error) {\n                    console.error(error);\n                    if (error.response.status === 401) {\n                        setLogin(false)\n                    }\n                } else {\n                    console.log('API called successfully. Returned data: ' + data);\n                    setSemStartDate(data.startDate)\n                }\n            });\n\n            let apiInstance = new Kucukdevapi.LessonsApi();\n            let lid = lessonID;\n            apiInstance.getSingleLesson(uid, sid, lid, (error, data, response) => {\n                if (error) {\n                    console.error(error);\n                    if (error.response.status === 401) {\n                        setLogin(false)\n                    }\n                } else {\n                    console.log('API called successfully. Returned data: ' + data);\n                    setLesson(data)\n                    setAbsences(data.absences)\n                    setSlots(data.slots)\n                }\n            });\n        } else {\n            history.push(\"/signin\")\n        }\n\n    }, [lessonID, uid, sid, login, setLogin, history])\n\n    useEffect(() => {\n        const days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"]\n\n        const addDays = (date, days) => {\n            const copy = new Date(Number(date))\n            copy.setDate(date.getDate() + days)\n            return copy\n        }\n\n        const absenceStructs = []\n        absences.sort()\n        for (let j = 0; j < absences.length; j++) {\n            const resAbs = lesson.absences[j].split(\",\")\n            let date = addDays(semStartDate, ((Number(resAbs[0]) - 1) * 7) + (Number(resAbs[1]) + 1))\n            let resDate = String(date).split(\" \");\n            const finalDate = resDate[1] + \" \" + resDate[2] + \", \" + resDate[3]\n            absenceStructs.push({\n                id: lesson._id,\n                name: lesson.name,\n                week: resAbs[0],\n                day: resAbs[1],\n                slot: resAbs[2],\n                date: finalDate\n            })\n        }\n\n        const absenceRows = []\n        for (let k = 0; k < absenceStructs.length; k++) {\n            absenceRows.push(\n                <tr key={k}>\n                    <td className=\"px-1 sm:px-4 py-2 whitespace-no-wrap border-b text-blue-900 border-gray-500 text-sm leading-5\">{absenceStructs[k].name}</td>\n                    <td className=\"px-4 py-2 whitespace-no-wrap border-b text-blue-900 border-gray-500 text-sm text-left leading-5\">{days[absenceStructs[k].day]}</td>\n                    <td className=\"px-0 sm:px-2 whitespace-no-wrap border-b border-gray-500 text-blue-900 text-sm leading-5\">{absenceStructs[k].slot}</td>\n                    <td className=\"px-2 py-2 whitespace-no-wrap border-b text-blue-900 border-gray-500 text-sm leading-5\">{absenceStructs[k].week}</td>\n                    <td className=\"px-2 py-2 whitespace-no-wrap border-b text-blue-900 border-gray-500 text-sm leading-5\">{absenceStructs[k].date}</td>\n                </tr>\n            )\n\n        }\n\n        setAbsenceStr(absenceRows)\n\n        let daySlot = [[], [], [], [], []]\n\n        let day = 0\n        for (let i = 0; i < slots.length; i++) {\n            const resSlot = slots[i].split(\",\")\n            daySlot[resSlot[0]].push(resSlot[1])\n        }\n\n        let cDay;\n        const fixedSlot = []\n        for (let j = 0; j < daySlot.length; j++) {\n            daySlot[j].length > 0 ? cDay = `${days[j]} ` : cDay = \"null\"\n            for (let k = 0; k < daySlot[j].length; k++) {\n                cDay += `${daySlot[j][k]}`\n                if (k < daySlot[j].length - 1) cDay += \",\"\n            }\n            cDay !== \"null\" && fixedSlot.push(cDay)\n        }\n\n        setFixedSlots(fixedSlot)\n\n    }, [absences, lesson, slots, semStartDate])\n\n    const deleteLesson = (id) => {\n\n        let apiInstance = new Kucukdevapi.LessonsApi();\n        let lid = id;\n        apiInstance.deleteLesson(uid, sid, lid, (error, data, response) => {\n            if (error) {\n                console.error(error);\n                if (error.response.status === 401) {\n                    setLogin(false)\n                }\n            } else {\n                console.log('API called successfully. Returned data: ' + data);\n                history.push(\"/lessons\")\n            }\n        });\n    }\n\n    return (\n        <div className=\"flex flex-col\">\n            <div className=\"flex flex-col xl:flex-row my-4 ml-0 xl:ml-32\">\n                <div className=\"m-0 md:m-2 xl:m-10 overflow-x-hidden\">\n                    <h1 className=\"flex justify-start text-2xl ml-8 md:ml-4 my-2\">{lesson.name}</h1>\n                    <table className=\"min-w-full\">\n                        <thead>\n                            <tr className=\"\">\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm text-left leading-4 text-blue-500 tracking-wider\">#</th>\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\"></th>\n                            </tr>\n                        </thead>\n                        <tbody className=\"bg-white  \">\n                            <tr>\n                                <td className=\"px-4 sm:px-8 md:px-20 py-4 border-b text-blue-900 border-gray-500 text-sm text-left font-bold leading-5\">Name</td>\n                                <td className=\"px-4 sm:px-8 md:px-20 py-4 border-b text-blue-900 border-gray-500 text-sm text-left leading-5\">{lesson.name}</td>\n                            </tr>\n                            <tr>\n                                <td className=\"px-4 sm:px-8 md:px-20 py-4 border-b text-blue-900 border-gray-500 text-sm text-left font-bold leading-5\">Instructor</td>\n                                <td className=\"px-4 sm:px-8 md:px-20 py-4 border-b text-blue-900 border-gray-500 text-sm text-left leading-5\">{lesson.instructor}</td>\n                            </tr>\n                            <tr>\n                                <td className=\"px-4 sm:px-8 md:px-20 py-4 border-b text-blue-900 border-gray-500 text-sm text-left font-bold leading-5\">Absence Limit</td>\n                                <td className=\"px-4 sm:px-8 md:px-20 py-4 border-b text-blue-900 border-gray-500 text-sm text-left leading-5\">{lesson.absenceLimit}</td>\n                            </tr>\n                            <tr>\n                                <td className=\"px-4 sm:px-8 md:px-20 py-4 border-b text-blue-900 border-gray-500 text-sm text-left font-bold leading-5\">Current Absent Number</td>\n                                <td className=\"px-4 sm:px-8 md:px-20 py-4 border-b text-blue-900 border-gray-500 text-sm text-left leading-5\">{absences.length}</td>\n                            </tr>\n                            <tr>\n                                <td className=\"px-4 sm:px-8 md:px-20 py-4 border-b text-blue-900 border-gray-500 text-sm text-left font-bold leading-5\">Weekly Schedule</td>\n                                <td className=\"px-4 sm:px-8 md:px-20 py-4 border-b text-blue-900 border-gray-500 text-sm text-left leading-5\">{fixedSlots.map((slot, index) => <p key={index}>{slot}</p>)}</td>\n                            </tr>\n                            <tr>\n                                <td className=\"px-4 sm:px-8 md:px-20 py-4 border-b text-blue-900 border-gray-500 text-sm text-left font-bold leading-5\">Quick Actions</td>\n                                <td className=\"px-4 sm:px-8 md:px-20 py-4 border-b text-blue-900 border-gray-500 text-sm leading-5\">\n                                    <div className=\"flex justify-around flex-col md:flex-row\">\n                                        <span className=\"relative inline-block px-3 py-1 font-semibold text-green-900 leading-tight\">\n                                            <span aria-hidden className=\"absolute inset-0 bg-yellow-300 rounded-full\"></span>\n                                            <Link to={{ pathname: `/lessons/update-lesson/${lesson._id}` }} className=\"relative text-xs font-bold\">Edit</Link>\n\n                                        </span>\n                                        <span className=\"relative inline-block px-3 py-1 font-semibold text-green-900 leading-tight\">\n                                            <span aria-hidden className=\"absolute inset-0 bg-red-500 opacity-90 rounded-full\"></span>\n                                            <button onClick={() => setLessonDeleteModal(true)} type=\"button\"\n                                                style={{ transition: \"all .15s ease\" }} className=\"relative text-xs font-bold\">Delete</button>\n                                        </span>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n\n                <div className=\"m-0 md:m-2 xl:m-10  overflow-x-auto\">\n                    <h1 className=\"flex justify-start text-2xl ml-8 md:ml-4 my-2\">Absence</h1>\n                    <table className=\"min-w-full\">\n                        <thead>\n                            <tr className=\"\">\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm text-left leading-4 text-blue-500 tracking-wider\">Lesson Name</th>\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Day</th>\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Slot</th>\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Week</th>\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Date</th>\n                            </tr>\n                        </thead>\n                        <tbody className=\"bg-white  \">\n                            {absenceStr}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            {lessonDeleteModal ? (\n                <div>\n                    <div\n                        className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\n                    >\n                        <div className=\"relative w-auto my-6 mx-auto max-w-3xl\">\n                            {/*content*/}\n                            <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\n                                {/*header*/}\n                                <div className=\"flex items-start justify-between p-5 border-b border-solid border-gray-300 rounded-t\">\n                                    <h3 className=\"pt-4 text-2xl text-center\">Delete lesson: {lesson.name}</h3>\n\n                                    <button\n                                        className=\"p-1 ml-auto bg-transparent border-0 text-black opacity-5 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\n                                        onClick={() => setLessonDeleteModal(false)}\n                                    >\n                                        <span className=\"bg-transparent text-black opacity-5 h-6 w-6 text-2xl block outline-none focus:outline-none\">\n                                            ×\n                    </span>\n                                    </button>\n                                </div>\n                                {/*body*/}\n                                <p className=\"flex justify-center text-base m-8\">You will lose everything belongs to this lesson irreversibly!</p>\n                                {/*footer*/}\n                                <div className=\"flex items-center justify-end p-6 border-t border-solid border-gray-300 rounded-b\">\n                                    <button\n                                        className=\"background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1\"\n                                        type=\"button\"\n                                        style={{ transition: \"all .15s ease\" }}\n                                        onClick={() => setLessonDeleteModal(false)}\n                                    >\n                                        Close\n                  </button>\n                                    <button\n                                        className=\"bg-red-500 text-white active:bg-red-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1\"\n                                        type=\"button\"\n                                        style={{ transition: \"all .15s ease\" }}\n                                        onClick={() => {\n                                            setLessonDeleteModal(false)\n                                            deleteLesson(lesson._id)\n                                        }\n                                        }\n                                    >\n                                        Delete Anyway\n                  </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\n                </div>\n            ) : null}\n        </div>\n    )\n}\n\nexport default LessonDetail\n","/frontend/src/components/Overview.js",[],"/frontend/src/components/Attendance.js",["96"],"/frontend/src/forms/Register.js",[],"/frontend/src/forms/Login.js",[],"/frontend/src/forms/AddUpdateSemester.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":14,"column":13,"nodeType":"103","messageId":"104","endLine":14,"endColumn":16},{"ruleId":"105","severity":1,"message":"106","line":33,"column":8,"nodeType":"107","endLine":33,"endColumn":16,"suggestions":"108"},{"ruleId":"105","severity":1,"message":"109","line":114,"column":8,"nodeType":"107","endLine":114,"endColumn":35,"suggestions":"110"},{"ruleId":"101","severity":1,"message":"102","line":109,"column":13,"nodeType":"103","messageId":"104","endLine":109,"endColumn":16},{"ruleId":"105","severity":1,"message":"111","line":210,"column":8,"nodeType":"107","endLine":210,"endColumn":66,"suggestions":"112"},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'day' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'slots'. Either include it or remove the dependency array.","ArrayExpression",["115"],"React Hook useEffect has a missing dependency: 'selectSlots'. Either include it or remove the dependency array.",["116"],"React Hook useEffect has missing dependencies: 'colorArray' and 'selectAbsences'. Either include them or remove the dependency array.",["117"],"no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},"Update the dependencies array to be: [lesson, slots]",{"range":"124","text":"125"},"Update the dependencies array to be: [slots, semester, lessonID, selectSlots]",{"range":"126","text":"127"},"Update the dependencies array to be: [semester, lessons, absenceIDs, week, absences, presences, colorArray, selectAbsences]",{"range":"128","text":"129"},[1058,1066],"[lesson, slots]",[4952,4979],"[slots, semester, lessonID, selectSlots]",[9397,9455],"[semester, lessons, absenceIDs, week, absences, presences, colorArray, selectAbsences]"]