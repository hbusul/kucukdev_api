[{"/frontend/src/index.js":"1","/frontend/src/reportWebVitals.js":"2","/frontend/src/App.js":"3","/frontend/src/layout/Navbar.js":"4","/frontend/src/pages/NotFound.js":"5","/frontend/src/components/Semester.js":"6","/frontend/src/components/Home.js":"7","/frontend/src/components/Login.js":"8","/frontend/src/components/Register.js":"9","/frontend/src/components/ResetPassword.js":"10","/frontend/src/Context.js":"11","/frontend/src/forms/AddSemester.js":"12","/frontend/src/components/Semesters.js":"13","/frontend/src/components/SemesterDetail.js":"14","/frontend/src/components/AddUISLesson.js":"15","/frontend/src/components/Lesson.js":"16","/frontend/src/components/Lessons.js":"17","/frontend/src/forms/AddUpdateLesson.js":"18","/frontend/src/components/LessonDetail.js":"19","/frontend/src/components/Overview.js":"20"},{"size":614,"mtime":1612725633994,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1612622406663,"results":"23","hashOfConfig":"22"},{"size":2003,"mtime":1613484108840,"results":"24","hashOfConfig":"22"},{"size":11118,"mtime":1613484152912,"results":"25","hashOfConfig":"22"},{"size":185,"mtime":1612983453940,"results":"26","hashOfConfig":"22"},{"size":6691,"mtime":1613251773839,"results":"27","hashOfConfig":"22"},{"size":1000,"mtime":1612980964371,"results":"28","hashOfConfig":"22"},{"size":7419,"mtime":1613121472012,"results":"29","hashOfConfig":"22"},{"size":6429,"mtime":1613252289391,"results":"30","hashOfConfig":"22"},{"size":3569,"mtime":1613033868396,"results":"31","hashOfConfig":"22"},{"size":2613,"mtime":1613470688580,"results":"32","hashOfConfig":"22"},{"size":14407,"mtime":1613470776541,"results":"33","hashOfConfig":"22"},{"size":10266,"mtime":1613475626121,"results":"34","hashOfConfig":"22"},{"size":11219,"mtime":1613479596252,"results":"35","hashOfConfig":"22"},{"size":764,"mtime":1613485972479,"results":"36","hashOfConfig":"22"},{"size":6048,"mtime":1613251711491,"results":"37","hashOfConfig":"22"},{"size":8469,"mtime":1613486013431,"results":"38","hashOfConfig":"22"},{"size":21029,"mtime":1613486270127,"results":"39","hashOfConfig":"22"},{"size":11209,"mtime":1613301360270,"results":"40","hashOfConfig":"22"},{"size":8130,"mtime":1613479704705,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"u0vdh2",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"44"},"/frontend/src/index.js",[],["90","91"],"/frontend/src/reportWebVitals.js",[],"/frontend/src/App.js",[],"/frontend/src/layout/Navbar.js",[],"/frontend/src/pages/NotFound.js",[],"/frontend/src/components/Semester.js",[],"/frontend/src/components/Home.js",[],"/frontend/src/components/Login.js",[],"/frontend/src/components/Register.js",[],"/frontend/src/components/ResetPassword.js",[],"/frontend/src/Context.js",[],"/frontend/src/forms/AddSemester.js",[],"/frontend/src/components/Semesters.js",["92","93"],"import { Link } from \"react-router-dom\";\nimport { useEffect, useState } from 'react'\nimport Semester from './Semester'\nimport UserConsumer from \"../Context\";\nimport UserContext from \"../Context\"\n\nvar Kucukdevapi = require('kucukdevapi');\n\nconst Semesters = (props) => {\n    const [semesters, setSemesters] = useState([])\n    const [refresh, setRefresh] = useState(0);\n    const USER_LOGIN = JSON.parse(localStorage.getItem(\"USER_LOGIN\"))\n\n    let defaultClient = Kucukdevapi.ApiClient.instance;\n    let OAuth2PasswordBearer = defaultClient.authentications['OAuth2PasswordBearer'];\n    OAuth2PasswordBearer.accessToken = USER_LOGIN.userToken;\n    let uid = USER_LOGIN.userID;\n\n    useEffect(() => {\n\n\n        let apiInstance = new Kucukdevapi.SemestersApi();\n        apiInstance.listSemestersOfUser(uid, (error, data, response) => {\n            if (error) {\n                console.error(error);\n                // const resErr = String(error).split(\" \")\n                // if (resErr[1] === \"Unauthorized\") props.history.push(\"/signin\")\n            } else {\n                console.log('API called successfully. Returned data: ' + data);\n                setSemesters(data)\n            }\n        });\n    }, [refresh])\n\n    const deleteSemester = (id) => {\n\n        let apiInstance = new Kucukdevapi.SemestersApi();\n        let sid = id;\n        apiInstance.deleteSemester(uid, sid, (error, data, response) => {\n            if (error) {\n                console.error(error);\n            } else {\n                console.log('API called successfully. Returned data: ' + data);\n            }\n            setRefresh((x) => x + 1);\n        });\n    }\n\n    const setCurrentSemester = (id, dispatch) => {\n\n        let apiInstance = new Kucukdevapi.UsersApi();\n        let updateSemesterModel = new Kucukdevapi.UpdateSemesterModel(id);\n        apiInstance.updateCurrentSemester(uid, updateSemesterModel, (error, data, response) => {\n            if (error) {\n                console.error(error);\n            } else {\n                console.log('API called successfully. Returned data: ' + data);\n                dispatch({\n                    type: \"SET_CURRENT_SEMESTER\", payload: data\n                });\n            }\n        });\n    }\n\n\n\n    return (\n        <UserConsumer>\n            {\n                value => {\n                    const { dispatch, currentSemester } = value\n\n                    return (\n                        <div>\n                            {\n                                USER_LOGIN.isLogin ?\n                                    <div className=\"flex flex-col my-8 xl:m-16 xl:mx-40\">\n                                        <h1 className=\"flex justify-start text-2xl ml-8 md:ml-4\">Your Semesters</h1>\n                                        <div className=\"my-2 py-2 overflow-x-auto sm:px-6 lg:px-8\">\n                                            <div className=\"align-middle inline-block min-w-full shadow overflow-hidden bg-white shadow-dashboard px-8 pt-3 rounded-bl-lg rounded-br-lg\">\n                                                <table className=\"min-w-full\">\n                                                    <thead>\n                                                        <tr className=\"\">\n                                                            <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm text-left leading-4 text-blue-500 tracking-wider\">Semester Name</th>\n                                                            <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Week Count</th>\n                                                            <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Start</th>\n                                                            <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Finish</th>\n                                                            <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Actions</th>\n                                                            <th className=\"px-6 py-3 border-b-2 border-gray-300\"></th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody className=\"bg-white  \">\n                                                        {\n                                                            semesters.map(semester => {\n                                                                return (\n                                                                    <Semester\n                                                                        key={semester.id}\n                                                                        semester={semester}\n                                                                        onDeleteSemester={() => deleteSemester(semester.id)}\n                                                                        onCurrentSemester={() => setCurrentSemester(semester.id, dispatch)}\n                                                                        currentSemester={currentSemester}\n                                                                    />\n                                                                )\n\n                                                            })\n                                                        }\n                                                    </tbody>\n                                                </table>\n                                                <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between my-4 work-sans\">\n                                                    <div>\n                                                        <p className=\"text-sm leading-5 text-blue-700\">\n                                                            Showing\n                                                <span className=\"font-medium mx-1\">1</span>\n                                                to\n                                                <span className=\"font-medium mx-1\">5</span>\n                                                of\n                                                <span className=\"font-medium mx-1\">9</span>\n                                                results\n                                            </p>\n                                                    </div>\n                                                    <div>\n                                                        <nav className=\"relative z-0 inline-flex shadow-sm\">\n                                                            <div>\n                                                                <a href=\"/\" className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-500 hover:text-gray-400 focus:z-10 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100 active:text-gray-500 transition ease-in-out duration-150\" aria-label=\"Previous\">\n                                                                    <svg className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                                                        <path fillRule=\"evenodd\" d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                                                                    </svg>\n                                                                </a>\n                                                            </div>\n                                                            <div v-if=\"pagination.current_page < pagination.last_page\">\n                                                                <a href=\"/\" className=\"-ml-px relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-500 hover:text-gray-400 focus:z-10 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100 active:text-gray-500 transition ease-in-out duration-150\" aria-label=\"Next\">\n                                                                    <svg className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                                                        <path fillRule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\n                                                                    </svg>\n                                                                </a>\n                                                            </div>\n                                                        </nav>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"flex justify-center md:justify-end text-xs md:text-base my-8 mx-4\">\n                                            <Link\n                                                to=\"/add-semester\"\n                                                className=\"w-1/2 md:w-1/3 lg:w-1/5 px-8 py-2 font-bold text-white bg-green-500 rounded-full hover:bg-green-700 focus:outline-none focus:shadow-outline\"\n\n                                            >\n                                                Add Semester\n                </Link>\n                                        </div>\n\n                                    </div>\n\n                                    :\n                                    <div>\n                                        <h1 className=\"text-xl mx-auto mt-48\">Not Authenticated!</h1>\n                                    </div>\n                            }\n                        </div >\n\n                    )\n                }\n            }\n        </UserConsumer>\n    )\n\n\n\n}\n\nexport default Semesters\n\n\n\n\n","/frontend/src/components/SemesterDetail.js",["94"],"import { useEffect, useState } from 'react';\n\nvar Kucukdevapi = require('kucukdevapi');\n\n\nconst SemesterDetail = (props) => {\n    const [lessons, setLessons] = useState([])\n    const [semester, setSemester] = useState({})\n\n    const semesterID = props.match.params.id;\n    const USER_LOGIN = JSON.parse(localStorage.getItem(\"USER_LOGIN\"))\n\n    let defaultClient = Kucukdevapi.ApiClient.instance;\n    let OAuth2PasswordBearer = defaultClient.authentications['OAuth2PasswordBearer'];\n    OAuth2PasswordBearer.accessToken = USER_LOGIN.userToken;\n\n    let semesterApiInstance = new Kucukdevapi.SemestersApi();\n    let uid = USER_LOGIN.userID;\n    let sid = semesterID;\n\n    useEffect(() => {\n        semesterApiInstance.getSingleSemester(uid, sid, (error, data, response) => {\n            if (error) {\n                console.error(error);\n            } else {\n                console.log('API called successfully. Returned data: ' + data);\n                setSemester(data)\n            }\n        });\n\n        let lessonApiInstance = new Kucukdevapi.LessonsApi();\n        lessonApiInstance.listLessonsOfSemester(uid, sid, (error, data, response) => {\n            if (error) {\n                console.error(error);\n            } else {\n                console.log('API called successfully. Returned data: ' + data);\n                setLessons(data)\n            }\n        });\n    }, [])\n\n    const scheduleHeads = [];\n    for (let index = 1; index <= semester.slotCount; index++) {\n        scheduleHeads.push(<th key={index} className=\"px-4 py-2 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">{index}</th>);\n    }\n\n    const colorArray = [\"bg-gray-400\", \"bg-red-600\", \"bg-yellow-500\", \"bg-green-600\", \"bg-blue-300\", \"bg-indigo-300\", \"bg-purple-600\", \"bg-pink-600\", \"bg-gray-900\", \"bg-green-900\", \"bg-indigo-900\", \"bg-purple-900\", \"bg-pink-900\"]\n    let lessonNames = []\n    let lessonSlots = []\n    let lessonColors = []\n\n    for (let i = 0; i < lessons.length; i++) {\n        for (let j = 0; j < (lessons[i].slots).length; j++) {\n            lessonNames.push(lessons[i].name)\n            lessonSlots.push(lessons[i].slots[j])\n            lessonColors.push(colorArray[i])\n        }\n    }\n\n    const setScheduleDays = (index) => {\n        const scheduleRows = []\n        for (let j = 1; j <= semester.slotCount; j++) {\n            scheduleRows.push(<td className={`border border-gray-500 text-blue-900 text-sm leading-5 ${lessonSlots.includes(`${index},${j}`) && `${lessonColors[lessonSlots.indexOf(`${index},${j}`)]}`}`}></td>)\n        }\n        return scheduleRows\n    }\n\n    const scheduleMon = setScheduleDays(0);\n    const scheduleTue = setScheduleDays(1);\n    const scheduleWed = setScheduleDays(2);\n    const scheduleThu = setScheduleDays(3);\n    const scheduleFri = setScheduleDays(4);\n\n\n    const weeksBetween = (d1, d2) => {\n        return String(Math.round((d2 - d1) / (7 * 24 * 60 * 60 * 1000)));\n    }\n\n    const resStartDate = String(semester.startDate).split(\" \");\n    const startDate = resStartDate[1] + \" \" + resStartDate[2] + \", \" + resStartDate[3]\n\n    const resEndDate = String(semester.endDate).split(\" \");\n    const endDate = resEndDate[1] + \" \" + resEndDate[2] + \", \" + resEndDate[3]\n\n    return (\n        <div className=\"flex flex-col\">\n            <div className=\"flex flex-col lg:flex-row mt-4 mx-0 xl:mx-32\">\n                <div className=\"m-0 md:mx-2 xl:mx-12 overflow-x-auto\">\n                    <h1 className=\"flex justify-start text-2xl ml-8 md:ml-4 my-2\">Summary of {semester.name}</h1>\n                    <table className=\"min-w-full\">\n                        <thead>\n                            <tr className=\"\">\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm text-left leading-4 text-blue-500 tracking-wider\">#</th>\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\"></th>\n                            </tr>\n                        </thead>\n                        <tbody className=\"bg-white  \">\n                            <tr>\n                                <td className=\"px-4 sm:px-8 md:px-16 py-3 border-b text-blue-900 font-bold border-gray-500 text-sm text-left leading-5\">Week Count</td>\n                                <td className=\"px-4 sm:px-8 md:px-20 py-3 border-b text-blue-900 border-gray-500 text-sm text-left leading-5\">{weeksBetween(semester.startDate, semester.endDate)}</td>\n                            </tr>\n                            <tr>\n                                <td className=\"px-4 sm:px-8 md:px-16 py-3 border-b text-blue-900 font-bold border-gray-500 text-sm text-left leading-5\">Start Date</td>\n                                <td className=\"px-4 sm:px-8 md:px-20 py-3 border-b text-blue-900 border-gray-500 text-sm text-left leading-5\">{startDate}</td>\n                            </tr>\n                            <tr>\n                                <td className=\"px-4 sm:px-8 md:px-16 py-3 border-b text-blue-900 font-bold border-gray-500 text-sm text-left leading-5\">End Date</td>\n                                <td className=\"px-4 sm:px-8 md:px-20 py-3 border-b text-blue-900 border-gray-500 text-sm text-left leading-5\">{endDate}</td>\n                            </tr>\n                            <tr>\n                                <td className=\"px-4 sm:px-8 md:px-16 py-3 border-b text-blue-900 font-bold border-gray-500 text-sm text-left leading-5\">Lesson Count</td>\n                                <td className=\"px-4 sm:px-8 md:px-20 py-3 border-b text-blue-900 border-gray-500 text-sm text-left leading-5\">{lessons.length}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n\n                <div className=\"px-2 overflow-x-auto\">\n                    <h1 className=\"flex justify-start text-2xl ml-8 md:ml-4 my-2\">Schedule</h1>\n                    <table className=\"min-w-full\">\n                        <thead>\n                            <tr className=\"\">\n                                <th className=\"px-3 py-2 border-b-2 border-gray-300 text-sm text-left leading-4 text-blue-500 tracking-wider\">#</th>\n                                {scheduleHeads}\n\n                            </tr>\n                        </thead>\n                        <tbody className=\"bg-white\">\n                            <tr>\n                                <td className=\"py-2 border border-gray-500 text-blue-900 font-bold text-sm leading-5\">Mon</td>\n                                {scheduleMon}\n                            </tr>\n                            <tr>\n                                <td className=\"py-2 border border-gray-500 text-blue-900 font-bold text-sm leading-5\">Tue</td>\n                                {scheduleTue}\n                            </tr>\n                            <tr>\n                                <td className=\"py-2 border border-gray-500 text-blue-900 font-bold text-sm leading-5\">Wed</td>\n                                {scheduleWed}\n                            </tr>\n                            <tr>\n                                <td className=\"py-2 border border-gray-500 text-blue-900 font-bold text-sm leading-5\">Thu</td>\n                                {scheduleThu}\n                            </tr>\n                            <tr>\n                                <td className=\"py-2 border border-gray-500 text-blue-900 font-bold text-sm leading-5\">Fri</td>\n                                {scheduleFri}\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n\n            <div className=\"flex flex-col lg:flex-row ml-0 xl:ml-32\">\n                <div className=\"m-0 md:mx-2 xl:m-10 overflow-x-auto\">\n                    <h1 className=\"flex justify-start text-2xl ml-8 md:ml-4 my-2\">Lessons</h1>\n                    <table className=\"min-w-full\">\n                        <thead>\n                            <tr className=\"\">\n                                <th className=\"px-4 py-3 border-b-2 border-gray-300 text-sm text-left leading-4 text-blue-500 tracking-wider\">Lesson Name</th>\n                                <th className=\"px-4 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Instructor</th>\n                                <th className=\"px-4 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Absence</th>\n                                <th className=\"px-4 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Absence Limit</th>\n                            </tr>\n                        </thead>\n                        <tbody className=\"bg-white  \">\n                            {\n                                lessons.map((lesson) => {\n                                    return (\n                                        <tr key={lesson._id}>\n                                            <td className=\"px-4 py-2 whitespace-no-wrap border-b text-blue-900 font-bold text-left border-gray-500 text-sm leading-5\">{lesson.name}</td>\n                                            <td className=\"px-4 py-2 whitespace-no-wrap border-b text-blue-900 border-gray-500 text-sm leading-5\">{lesson.instructor}</td>\n                                            <td className=\"px-4 py-2 whitespace-no-wrap border-b border-gray-500 text-blue-900 text-sm leading-5\">{(lesson.absences).length}</td>\n                                            <td className=\"px-4 py-2 whitespace-no-wrap border-b text-blue-900 border-gray-500 text-sm leading-5\">{lesson.absenceLimit}</td>\n                                        </tr>\n                                    )\n                                })\n                            }\n                        </tbody>\n                    </table>\n                </div>\n\n                <div className=\"m-0 md:mx-2 xl:my-10 overflow-x-auto\">\n                    <h1 className=\"flex justify-start text-2xl ml-8 md:ml-4 my-2\">Absence</h1>\n                    <table className=\"min-w-full\">\n                        <thead>\n                            <tr className=\"\">\n                                <th className=\"px-4 py-3 border-b-2 border-gray-300 text-sm text-left leading-4 text-blue-500 tracking-wider\">Lesson Name</th>\n                                <th className=\"px-4 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Day</th>\n                                <th className=\"px-4 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Slot</th>\n                                <th className=\"px-4 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Week</th>\n                                <th className=\"px-4 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Date</th>\n                            </tr>\n                        </thead>\n                        <tbody className=\"bg-white  \">\n\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    )\n\n\n}\n\n\nexport default SemesterDetail","/frontend/src/components/AddUISLesson.js",[],"/frontend/src/components/Lesson.js",[],["95","96"],"/frontend/src/components/Lessons.js",["97"],"import { useState, useEffect } from \"react\"\nimport { Link } from 'react-router-dom'\n\nimport Lesson from './Lesson'\n\nvar Kucukdevapi = require('kucukdevapi');\n\n\nconst Lessons = () => {\n\n    const [lessons, setLessons] = useState([])\n    const [refresh, setRefresh] = useState(0);\n    const USER_LOGIN = JSON.parse(localStorage.getItem(\"USER_LOGIN\"))\n    const CURRENT_SEMESTER = JSON.parse(localStorage.getItem(\"CURRENT_SEMESTER\"))\n\n\n    useEffect(() => {\n\n        let defaultClient = Kucukdevapi.ApiClient.instance;\n        let OAuth2PasswordBearer = defaultClient.authentications['OAuth2PasswordBearer'];\n        OAuth2PasswordBearer.accessToken = USER_LOGIN.userToken;\n\n        let apiInstance = new Kucukdevapi.LessonsApi();\n        let uid = USER_LOGIN.userID;\n        let sid = CURRENT_SEMESTER.currentSemester;\n        apiInstance.listLessonsOfSemester(uid, sid, (error, data, response) => {\n            if (error) {\n                console.error(error);\n            } else {\n                console.log('API called successfully. Returned data: ' + data);\n                setLessons(data)\n            }\n        });\n    }, [refresh])\n\n    const deleteLesson = (id) => {\n\n        let defaultClient = Kucukdevapi.ApiClient.instance;\n        let OAuth2PasswordBearer = defaultClient.authentications['OAuth2PasswordBearer'];\n        OAuth2PasswordBearer.accessToken = USER_LOGIN.userToken;\n\n        let apiInstance = new Kucukdevapi.LessonsApi();\n        let uid = USER_LOGIN.userID;\n        let sid = CURRENT_SEMESTER.currentSemester;\n        let lid = id;\n        apiInstance.deleteLesson(uid, sid, lid, (error, data, response) => {\n            if (error) {\n                console.error(error);\n            } else {\n                console.log('API called successfully. Returned data: ' + data);\n            }\n            setRefresh((x) => x + 1);\n        });\n    }\n\n\n    return (\n        <div>\n            {\n                true ?\n                    <div className=\"flex flex-col my-8 xl:m-16 xl:mx-40\">\n                        <div className=\"flex flex-row justify-around mb-4\">\n                            <Link to=\"/lessons/show-lessons\" className=\"text-gray-800 text-base font-semibold hover:text-purple-600 mb-1 md:hidden\">Show Lessons</Link>\n                            <Link to=\"/lessons/add-lesson\" className=\"text-gray-800 text-base font-semibold hover:text-purple-600 mb-1 md:hidden\">Add Lesson</Link>\n                            <Link to=\"/lessons/add-from-uis\" className=\"text-gray-800 text-base font-semibold hover:text-purple-600 mb-1 md:hidden\">Add from UIS</Link>\n                        </div>\n                        <h1 className=\"flex justify-start text-2xl ml-8 md:ml-4\">Your Lessons</h1>\n                        <div className=\"my-2 py-2 overflow-x-auto sm:px-6 lg:px-8\">\n                            <div className=\"align-middle inline-block min-w-full shadow overflow-hidden bg-white shadow-dashboard px-8 pt-3 rounded-bl-lg rounded-br-lg\">\n                                <table className=\"min-w-full\">\n                                    <thead>\n                                        <tr className=\"\">\n                                            <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm text-left leading-4 text-blue-500 tracking-wider\">Lesson Name</th>\n                                            <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Schedule</th>\n                                            <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Absence</th>\n                                            <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Actions</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody className=\"bg-white  \">\n                                        {\n                                            lessons.map((lesson) => {\n                                                return (\n                                                    <Lesson\n                                                        key={lesson._id}\n                                                        lesson={lesson}\n                                                        onDeleteLesson={() => deleteLesson(lesson._id)}\n\n                                                    />\n                                                )\n                                            })\n                                        }\n                                    </tbody>\n                                </table>\n                                <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between my-4 work-sans\">\n                                    <div>\n                                        <p className=\"text-sm leading-5 text-blue-700\">\n                                            Showing\n                                <span className=\"font-medium mx-1\">1</span>\n                                to\n                                <span className=\"font-medium mx-1\">5</span>\n                                of\n                                <span className=\"font-medium mx-1\">9</span>\n                                results\n                            </p>\n                                    </div>\n                                    <div>\n                                        <nav className=\"relative z-0 inline-flex shadow-sm\">\n                                            <div>\n                                                <a href=\"/\" className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-500 hover:text-gray-400 focus:z-10 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100 active:text-gray-500 transition ease-in-out duration-150\" aria-label=\"Previous\">\n                                                    <svg className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                                        <path fillRule=\"evenodd\" d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                                                    </svg>\n                                                </a>\n                                            </div>\n                                            <div v-if=\"pagination.current_page < pagination.last_page\">\n                                                <a href=\"/\" className=\"-ml-px relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-500 hover:text-gray-400 focus:z-10 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100 active:text-gray-500 transition ease-in-out duration-150\" aria-label=\"Next\">\n                                                    <svg className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                                        <path fillRule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\n                                                    </svg>\n                                                </a>\n                                            </div>\n                                        </nav>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"flex justify-center md:justify-end text-xs md:text-base my-8 mx-4\">\n                            <Link\n                                to=\"/lessons/add-lesson\"\n                                className=\"w-1/2 md:w-1/3 lg:w-1/5 px-8 py-2 font-bold text-white bg-green-500 rounded-full hover:bg-green-700 focus:outline-none focus:shadow-outline\"\n\n                            >\n                                Add Lesson\n                </Link>\n                        </div>\n                    </div>\n\n                    :\n                    <div>\n                        <h1 className=\"text-xl mx-auto mt-48\">Not Authenticated!</h1>\n                    </div>\n            }\n        </div >\n\n    )\n}\n\nexport default Lessons\n","/frontend/src/forms/AddUpdateLesson.js",["98","99","100"],"import React, { useState, useEffect } from 'react'\nimport { Link } from \"react-router-dom\";\n\nvar Kucukdevapi = require('kucukdevapi');\n\n\nconst AddLesson = (props) => {\n    const [semester, setSemester] = useState({})\n    const [calculateModal, setCalculateModal] = useState(false);\n    const [dummy, setDummy] = useState(false)\n\n    const [slots, setSlots] = useState([])\n    const [lessonName, setLessonName] = useState(\"\")\n    const [instrutcorName, setInstructorName] = useState(\"\")\n    const [absenceLimit, setAbsenceLimit] = useState(0)\n    const [numOfWeeks, setNumOfWeeks] = useState(14)\n    const [lessonPerWeek, setLessonPerWeek] = useState(5)\n    const [maxPercentage, setMaxPercentage] = useState(30)\n    const [scheduleRows, setScheduleRows] = useState([])\n\n    const USER_LOGIN = JSON.parse(localStorage.getItem(\"USER_LOGIN\"))\n    const CURRENT_SEMESTER = JSON.parse(localStorage.getItem(\"CURRENT_SEMESTER\"))\n    const currentLessonID = props.match.params.id\n\n    let defaultClient = Kucukdevapi.ApiClient.instance;\n    let OAuth2PasswordBearer = defaultClient.authentications['OAuth2PasswordBearer'];\n    OAuth2PasswordBearer.accessToken = USER_LOGIN.userToken;\n    let uid = USER_LOGIN.userID;\n    let sid = CURRENT_SEMESTER.currentSemester;\n\n    useEffect(() => {\n        if (currentLessonID) {\n            let apiInstance = new Kucukdevapi.LessonsApi();\n            let lid = currentLessonID; // String | \n            apiInstance.getSingleLesson(uid, sid, lid, (error, data, response) => {\n                if (error) {\n                    console.error(error);\n                } else {\n                    console.log('API called successfully. Returned data: ' + data);\n                    setAbsenceLimit(data.absenceLimit)\n                    setLessonName(data.name)\n                    setInstructorName(data.instructor)\n                    setSlots(data.slots)\n                }\n            });\n        } else {\n            setSlots([])\n            setAbsenceLimit(0)\n        }\n\n        let apiInstance = new Kucukdevapi.SemestersApi();\n        apiInstance.getSingleSemester(uid, sid, (error, data, response) => {\n            if (error) {\n                console.error(error);\n            } else {\n                console.log('API called successfully. Returned data: ' + data);\n                setSemester(data)\n            }\n        });\n\n    }, [currentLessonID, uid, sid])\n\n\n    useEffect(() => {\n        let hour = String(semester.startHour)\n        let resStart = hour.split(\".\")\n        let startHour = Number(resStart[0])\n        let startMin = Number(resStart[1])\n\n        const period = semester.dLesson + semester.dBreak\n        const periodHour = parseInt(period / 60)\n        const periodMin = period % 60\n\n        const scheduleArray = []\n        if (!currentLessonID || slots.length !== 0) {\n            for (let index = 1; index <= semester.slotCount; index++) {\n                scheduleArray.push(<tr key={index}>\n                    <td className=\"px-6 py-1 whitespace-no-wrap border-b text-blue-900 border-gray-500 text-sm leading-5\">{hour}</td>\n                    <td className=\"border border-gray-500 text-blue-900 text-sm leading-5\"><input onClick={() => selectSlots(`0,${index}`)} checked={slots.includes(`0,${index}`)} type=\"checkbox\"></input></td>\n                    <td className=\"border border-gray-500 text-blue-900 text-sm leading-5\"><input onClick={() => selectSlots(`1,${index}`)} checked={slots.includes(`1,${index}`)} type=\"checkbox\"></input></td>\n                    <td className=\"border text-blue-900 border-gray-500 text-sm leading-5\"><input onClick={() => selectSlots(`2,${index}`)} checked={slots.includes(`2,${index}`)} type=\"checkbox\"></input></td>\n                    <td className=\"border text-blue-900 border-gray-500 text-sm leading-5\"><input onClick={() => selectSlots(`3,${index}`)} checked={slots.includes(`3,${index}`)} type=\"checkbox\"></input></td>\n                    <td className=\"border border-gray-500 text-blue-900 text-sm leading-5\"><input onClick={() => selectSlots(`4,${index}`)} checked={slots.includes(`4,${index}`)} type=\"checkbox\"></input></td>\n                </tr >);\n\n                startHour += periodHour\n                startMin += periodMin\n\n                if (startMin >= 60) {\n                    startHour += 1\n                    startMin = startMin % 60\n                }\n\n                if (startMin < 10) {\n                    hour = startHour + \".0\" + startMin\n                } else {\n                    hour = startHour + \".\" + startMin\n                }\n            }\n        }\n\n        setScheduleRows(scheduleArray)\n\n    }, [slots, semester, currentLessonID])\n\n    const selectSlots = (newSlot) => {\n        if (slots.includes(newSlot)) {\n            setSlots(slots.filter((slot) => slot !== newSlot))\n        } else {\n            setSlots([...slots, newSlot])\n        }\n    }\n\n    const setLessonSlots = () => {\n        // If slots didn't selected in order\n        for (let i = 0; i < slots.length; i++) {\n            for (let j = i + 1; j < slots.length; j++) {\n                if (slots[j] < slots[i]) {\n                    let temp = slots[j]\n                    slots[j] = slots[i]\n                    slots[i] = temp\n                }\n            }\n        }\n    }\n\n    const addLesson = (e) => {\n        e.preventDefault()\n\n        setLessonSlots()\n\n        let apiInstance = new Kucukdevapi.LessonsApi();\n        let lessonModel = new Kucukdevapi.LessonModel(lessonName, instrutcorName, absenceLimit, slots);\n        apiInstance.createLesson(uid, sid, lessonModel, (error, data, response) => {\n            if (error) {\n                console.error(error);\n            } else {\n                console.log('API called successfully. Returned data: ' + data);\n            }\n        });\n\n        props.history.push(\"/lessons\")\n    }\n\n    const updateLesson = (e) => {\n        e.preventDefault()\n\n        setLessonSlots()\n\n        let apiInstance = new Kucukdevapi.LessonsApi();\n        let lid = currentLessonID;\n        let updateLessonModel = new Kucukdevapi.UpdateLessonModel(lessonName, instrutcorName, absenceLimit, slots);\n        apiInstance.updateLesson(uid, sid, lid, updateLessonModel, (error, data, response) => {\n            if (error) {\n                console.error(error);\n            } else {\n                console.log('API called successfully. Returned data: ' + data);\n            }\n        });\n\n        props.history.push(\"/lessons\")\n    }\n\n\n    return (\n        <div className=\"flex flex-col my-8 xl:mx-40\">\n            <div className=\"flex flex-row justify-around mb-4\">\n                <Link to=\"/lessons/show-lessons\" className=\"text-gray-800 text-base font-semibold hover:text-purple-600 mb-1 md:hidden\">Show Lessons</Link>\n                <Link to=\"/lessons/add-lesson\" className=\"text-gray-800 text-base font-semibold hover:text-purple-600 mb-1 md:hidden\">Add Lesson</Link>\n                <Link to=\"/lessons/add-from-uis\" className=\"text-gray-800 text-base font-semibold hover:text-purple-600 mb-1 md:hidden\">Add from UIS</Link>\n            </div>\n            <div className=\"flex h-full\">\n                <div className=\"flex bg-white shadow-xl rounded flex-col w-full mx-auto mt-2\">\n                    <div className=\"w-full flex flex-col md:flex-row\">\n                        <div\n                            className=\"w-full h-auto lg:block lg:w-7/12 bg-cover rounded-l-lg\">\n                            <h1 className=\"flex justify-center md:justify-start text-2xl ml-4 my-2\">{currentLessonID ? \"Select Updated Hours\" : \"Select Hours\"}</h1>\n                            <table className=\"min-w-full\">\n                                <thead>\n                                    <tr className=\"\">\n                                        <th className=\"px-6 py-2 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">#</th>\n                                        <th className=\"px-3 py-2 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Mon</th>\n                                        <th className=\"px-3 py-2 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Tue</th>\n                                        <th className=\"px-3 py-2 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Wed</th>\n                                        <th className=\"px-3 py-2 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Thu</th>\n                                        <th className=\"px-3 py-2 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Fri</th>\n\n                                    </tr>\n                                </thead>\n                                <tbody className=\"bg-white\">\n                                    {scheduleRows}\n                                </tbody>\n                            </table>\n                            <p className=\"flex justify-center md:justify-end text-xs italic text-red-500 ml-4 my-2\">*You can select slots of the lesson from the table.</p>\n\n                        </div>\n                        <div className=\"w-full lg:w-5/12 bg-white p-5 rounded-lg lg:rounded-l-none mx-auto\">\n                            <h3 className=\"pt-4 text-2xl text-center\">{currentLessonID ? \"Update Lesson\" : \"Add Lesson!\"}</h3>\n                            <form onSubmit={currentLessonID ? (e) => updateLesson(e) : (e) => addLesson(e)} className=\"px-8 pt-6 pb-8 mb-4 bg-white rounded\">\n                                <div className=\"mb-4\">\n                                    <label className=\"block mb-2 text-base font-bold text-gray-700\">\n                                        Lesson Name\n                                    </label>\n                                    <input\n                                        className=\"w-full px-3 py-2 mb-3 text-base leading-medium text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\n                                        id=\"lessonName\"\n                                        type=\"text\"\n                                        placeholder=\"EE213\"\n                                        defaultValue={currentLessonID && lessonName}\n                                        name=\"lessonName\"\n                                        onChange={(e) => setLessonName(e.target.value)}\n                                        required\n                                    />\n                                </div>\n                                <div className=\"mb-4\">\n                                    <label className=\"block mb-2 text-base font-bold text-gray-700\">\n                                        Instructor Name\n            </label>\n                                    <input\n                                        className=\"w-full px-3 py-2 mb-3 text-base leading-medium text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\n                                        id=\"instructorName\"\n                                        type=\"text\"\n                                        placeholder=\"John Doe\"\n                                        defaultValue={currentLessonID && instrutcorName}\n                                        name=\"instructorName\"\n                                        onChange={(e) => setInstructorName(e.target.value)}\n                                        required\n                                    />\n                                </div>\n                                <div className=\"mb-4\">\n                                    <div className=\"w-full mb-4 md:mr-2 md:mb-0\">\n                                        <label className=\"block mb-2 text-base font-bold text-gray-700\">\n                                            Absence Limit\n                </label>\n                                        <input\n                                            className=\"w-full px-3 py-2 mb-3 text-base leading-medium text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\n                                            id=\"absenceLimit\"\n                                            type=\"number\"\n                                            placeholder=\"20\"\n                                            value={absenceLimit}\n                                            name=\"absenceLimit\"\n                                            onChange={(e) => setAbsenceLimit(e.target.value)}\n                                        />\n                                        <div className=\"text-right\">\n                                            <button\n                                                type=\"button\"\n                                                style={{ transition: \"all .15s ease\" }}\n                                                onClick={() => setCalculateModal(true)}\n                                                className=\"inline-block text-sm text-blue-500 align-baseline hover:text-blue-800\"\n                                            >\n                                                Calculate!\n            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"mb-6 text-center\">\n                                    <button\n                                        className={`w-full px-4 py-2 font-bold text-white ${currentLessonID ? \"bg-yellow-400 hover:bg-yellow-500\" : \"bg-blue-500 hover:bg-blue-700\"} rounded-full  focus:outline-none focus:shadow-outline`}\n                                        type=\"submit\"\n                                    >\n                                        {currentLessonID ? \"Update The Lesson\" : \"Add The Lesson\"}\n                                    </button>\n                                </div>\n                                <hr className=\"mb-6 border-t\" />\n\n\n                            </form>\n                        </div>\n\n                    </div>\n                </div>\n            </div >\n            {calculateModal ? (\n                <div>\n                    <div\n                        className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\n                    >\n                        <div className=\"relative w-auto my-6 mx-auto max-w-3xl\">\n                            {/*content*/}\n                            <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\n                                {/*header*/}\n                                <div className=\"flex items-start justify-between p-5 border-b border-solid border-gray-300 rounded-t\">\n                                    <h3 className=\"pt-4 text-2xl text-center\">Calculate Absence Limit!</h3>\n\n                                    <button\n                                        className=\"p-1 ml-auto bg-transparent border-0 text-black opacity-5 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\n                                        onClick={() => setCalculateModal(false)}\n                                    >\n                                        <span className=\"bg-transparent text-black opacity-5 h-6 w-6 text-2xl block outline-none focus:outline-none\">\n                                            ×\n                    </span>\n                                    </button>\n                                </div>\n                                {/*body*/}\n                                <form className=\"px-8 pt-6 pb-8 bg-white rounded\">\n                                    <div className=\"mb-4\">\n                                        <label className=\"block mb-2 text-base font-bold text-gray-700\">\n                                            Number of Weeks\n            </label>\n                                        <input\n                                            className=\"w-full px-3 py-2 mb-3 text-base leading-medium text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\n                                            id=\"numOfWeeks\"\n                                            type=\"number\"\n                                            name=\"numOfWeeks\"\n                                            value={numOfWeeks}\n                                            onChange={(e) => setNumOfWeeks(e.target.value)}\n                                        />\n                                        <p className=\"flex justify-center text-xs italic text-red-500 my-2\">It is always safer to choose week number less than what you think, so you will not have an unpleasent surprise.</p>\n\n                                    </div>\n                                    <div className=\"mb-4\">\n                                        <label className=\"block mb-2 text-base font-bold text-gray-700\">\n                                            Lesson Count Per Week\n            </label>\n                                        <input\n                                            className=\"w-full px-3 py-2 mb-3 text-base leading-medium text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\n                                            id=\"lessonPerWeek\"\n                                            type=\"number\"\n                                            name=\"lessonPerWeek\"\n                                            value={lessonPerWeek}\n                                            onChange={(e) => setLessonPerWeek(e.target.value)}\n                                        />\n                                    </div>\n                                    <div className=\"mb-4\">\n                                        <div className=\"w-full mb-4 md:mr-2 md:mb-0\">\n                                            <label className=\"block mb-2 text-base font-bold text-gray-700\">\n                                                Max Absence Percentage\n                </label>\n                                            <input\n                                                className=\"w-full px-3 py-2 mb-3 text-base leading-medium text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\n                                                id=\"maxPercentage\"\n                                                type=\"number\"\n                                                placeholder=\"20\"\n                                                name=\"maxPercentage\"\n                                                value={maxPercentage}\n                                                onChange={(e) => setMaxPercentage(e.target.value)}\n                                            />\n                                        </div>\n                                    </div>\n                                    <h1 className=\"flex justify-center text-2xl\">{Math.round((((numOfWeeks * lessonPerWeek) / 100) * maxPercentage) * 100) / 100} Hours</h1>\n                                </form>\n                                {/*footer*/}\n                                <div className=\"flex items-center justify-end p-6 border-t border-solid border-gray-300 rounded-b\">\n                                    <button\n                                        className=\"text-red-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1\"\n                                        type=\"button\"\n                                        style={{ transition: \"all .15s ease\" }}\n                                        onClick={() => setCalculateModal(false)}\n                                    >\n                                        Close\n                  </button>\n                                    <button\n                                        className=\"bg-green-500 text-white active:bg-green-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1\"\n                                        type=\"button\"\n                                        style={{ transition: \"all .15s ease\" }}\n                                        onClick={() => {\n                                            setAbsenceLimit(parseInt((((numOfWeeks * lessonPerWeek) / 100) * maxPercentage)))\n                                            setCalculateModal(false)\n                                        }\n                                        }\n                                    >\n                                        Use This Value\n                  </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\n                </div>\n            ) : null}\n        </div>\n    )\n}\n\nexport default AddLesson\n","/frontend/src/components/LessonDetail.js",["101"],"import { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nvar Kucukdevapi = require('kucukdevapi');\n\nconst LessonDetail = (props) => {\n    const [lesson, setLesson] = useState({})\n    const [absences, setAbsences] = useState([])\n    const [lessonDeleteModal, setLessonDeleteModal] = useState(false);\n\n\n    const currentLessonID = props.match.params.id\n    const USER_LOGIN = JSON.parse(localStorage.getItem(\"USER_LOGIN\"))\n    const CURRENT_SEMESTER = JSON.parse(localStorage.getItem(\"CURRENT_SEMESTER\"))\n\n\n    useEffect(() => {\n        let defaultClient = Kucukdevapi.ApiClient.instance;\n        let OAuth2PasswordBearer = defaultClient.authentications['OAuth2PasswordBearer'];\n        OAuth2PasswordBearer.accessToken = USER_LOGIN.userToken;\n\n        let apiInstance = new Kucukdevapi.LessonsApi();\n        let uid = USER_LOGIN.userID;\n        let sid = CURRENT_SEMESTER.currentSemester;\n        let lid = currentLessonID;\n        apiInstance.getSingleLesson(uid, sid, lid, (error, data, response) => {\n            if (error) {\n                console.error(error);\n            } else {\n                console.log('API called successfully. Returned data: ' + data);\n                setLesson(data)\n                setAbsences(data.absences)\n            }\n        });\n    }, [])\n\n    const deleteLesson = (id) => {\n\n        let defaultClient = Kucukdevapi.ApiClient.instance;\n        let OAuth2PasswordBearer = defaultClient.authentications['OAuth2PasswordBearer'];\n        OAuth2PasswordBearer.accessToken = USER_LOGIN.userToken;\n\n        let apiInstance = new Kucukdevapi.LessonsApi();\n        let uid = USER_LOGIN.userID;\n        let sid = CURRENT_SEMESTER.currentSemester;\n        let lid = id;\n        apiInstance.deleteLesson(uid, sid, lid, (error, data, response) => {\n            if (error) {\n                console.error(error);\n            } else {\n                console.log('API called successfully. Returned data: ' + data);\n            }\n        });\n\n        props.history(\"/lessons\")\n    }\n\n    return (\n        <div className=\"flex flex-col\">\n            <div className=\"flex flex-col xl:flex-row my-4 ml-0 xl:ml-32\">\n                <div className=\"m-0 md:m-2 xl:m-10 overflow-x-hidden\">\n                    <h1 className=\"flex justify-start text-2xl ml-8 md:ml-4 my-2\">{lesson.name}</h1>\n                    <table className=\"min-w-full\">\n                        <thead>\n                            <tr className=\"\">\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm text-left leading-4 text-blue-500 tracking-wider\">#</th>\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\"></th>\n                            </tr>\n                        </thead>\n                        <tbody className=\"bg-white  \">\n                            <tr>\n                                <td className=\"px-4 sm:px-8 md:px-20 py-4 border-b text-blue-900 border-gray-500 text-sm text-left leading-5\">Name</td>\n                                <td className=\"px-4 sm:px-8 md:px-20 py-4 border-b text-blue-900 border-gray-500 text-sm text-left leading-5\">{lesson.name}</td>\n                            </tr>\n                            <tr>\n                                <td className=\"px-4 sm:px-8 md:px-20 py-4 border-b text-blue-900 border-gray-500 text-sm text-left leading-5\">Instructor</td>\n                                <td className=\"px-4 sm:px-8 md:px-20 py-4 border-b text-blue-900 border-gray-500 text-sm text-left leading-5\">{lesson.instructor}</td>\n                            </tr>\n                            <tr>\n                                <td className=\"px-4 sm:px-8 md:px-20 py-4 border-b text-blue-900 border-gray-500 text-sm text-left leading-5\">Absence Limit</td>\n                                <td className=\"px-4 sm:px-8 md:px-20 py-4 border-b text-blue-900 border-gray-500 text-sm text-left leading-5\">{lesson.absenceLimit}</td>\n                            </tr>\n                            <tr>\n                                <td className=\"px-4 sm:px-8 md:px-20 py-4 border-b text-blue-900 border-gray-500 text-sm text-left leading-5\">Current Absent Number</td>\n                                <td className=\"px-4 sm:px-8 md:px-20 py-4 border-b text-blue-900 border-gray-500 text-sm text-left leading-5\">{absences.length}</td>\n                            </tr>\n                            <tr>\n                                <td className=\"px-4 sm:px-8 md:px-20 py-4 border-b text-blue-900 border-gray-500 text-sm text-left leading-5\">Weekly Schedule</td>\n                                <td className=\"px-4 sm:px-8 md:px-20 py-4 border-b text-blue-900 border-gray-500 text-sm text-left leading-5\">{lesson.slots}</td>\n                            </tr>\n                            <tr>\n                                <td className=\"px-4 sm:px-8 md:px-20 py-4 border-b text-blue-900 border-gray-500 text-sm text-left leading-5\">Quick Actions</td>\n                                <td className=\"px-4 sm:px-8 md:px-20 py-4 border-b text-blue-900 border-gray-500 text-sm leading-5\">\n                                    <div className=\"flex justify-around flex-col md:flex-row\">\n                                        <span className=\"relative inline-block px-3 py-1 font-semibold text-green-900 leading-tight\">\n                                            <span aria-hidden className=\"absolute inset-0 bg-yellow-300 rounded-full\"></span>\n                                            <Link to={{ pathname: `/lessons/update-lesson/${lesson._id}` }} className=\"relative text-xs font-bold\">Edit</Link>\n\n                                        </span>\n                                        <span className=\"relative inline-block px-3 py-1 font-semibold text-green-900 leading-tight\">\n                                            <span aria-hidden className=\"absolute inset-0 bg-red-500 opacity-90 rounded-full\"></span>\n                                            <button onClick={() => setLessonDeleteModal(true)} type=\"button\"\n                                                style={{ transition: \"all .15s ease\" }} className=\"relative text-xs font-bold\">Delete</button>\n                                        </span>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n\n                <div className=\"m-0 md:m-2 xl:m-10  overflow-x-auto\">\n                    <h1 className=\"flex justify-start text-2xl ml-8 md:ml-4 my-2\">Absence</h1>\n                    <table className=\"min-w-full\">\n                        <thead>\n                            <tr className=\"\">\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm text-left leading-4 text-blue-500 tracking-wider\">Lesson Name</th>\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Day</th>\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Slot</th>\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Week</th>\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Date</th>\n                            </tr>\n                        </thead>\n                        <tbody className=\"bg-white  \">\n\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            {lessonDeleteModal ? (\n                <div>\n                    <div\n                        className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\n                    >\n                        <div className=\"relative w-auto my-6 mx-auto max-w-3xl\">\n                            {/*content*/}\n                            <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\n                                {/*header*/}\n                                <div className=\"flex items-start justify-between p-5 border-b border-solid border-gray-300 rounded-t\">\n                                    <h3 className=\"pt-4 text-2xl text-center\">Delete lesson: {lesson.name}</h3>\n\n                                    <button\n                                        className=\"p-1 ml-auto bg-transparent border-0 text-black opacity-5 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\n                                        onClick={() => setLessonDeleteModal(false)}\n                                    >\n                                        <span className=\"bg-transparent text-black opacity-5 h-6 w-6 text-2xl block outline-none focus:outline-none\">\n                                            ×\n                    </span>\n                                    </button>\n                                </div>\n                                {/*body*/}\n                                <p className=\"flex justify-center text-base m-8\">You will lose everything belongs to this lesson irreversibly!</p>\n                                {/*footer*/}\n                                <div className=\"flex items-center justify-end p-6 border-t border-solid border-gray-300 rounded-b\">\n                                    <button\n                                        className=\"background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1\"\n                                        type=\"button\"\n                                        style={{ transition: \"all .15s ease\" }}\n                                        onClick={() => setLessonDeleteModal(false)}\n                                    >\n                                        Close\n                  </button>\n                                    <button\n                                        className=\"bg-red-500 text-white active:bg-red-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1\"\n                                        type=\"button\"\n                                        style={{ transition: \"all .15s ease\" }}\n                                        onClick={() => {\n                                            setLessonDeleteModal(false)\n                                            deleteLesson()\n                                        }\n                                        }\n                                    >\n                                        Delete Anyway\n                  </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\n                </div>\n            ) : null}\n        </div>\n    )\n}\n\nexport default LessonDetail\n","/frontend/src/components/Overview.js",["102"],"import React, { useState, useEffect } from 'react'\n\nvar Kucukdevapi = require('kucukdevapi');\n\nconst Overview = () => {\n    const [semester, setSemester] = useState({})\n    const [lessons, setLessons] = useState([])\n\n    const USER_LOGIN = JSON.parse(localStorage.getItem(\"USER_LOGIN\"))\n    const CURRENT_SEMESTER = JSON.parse(localStorage.getItem(\"CURRENT_SEMESTER\"))\n\n    useEffect(() => {\n        let defaultClient = Kucukdevapi.ApiClient.instance;\n        let OAuth2PasswordBearer = defaultClient.authentications['OAuth2PasswordBearer'];\n        OAuth2PasswordBearer.accessToken = USER_LOGIN.userToken;\n        let uid = USER_LOGIN.userID;\n        let sid = CURRENT_SEMESTER.currentSemester;\n\n        let smestersApiInstance = new Kucukdevapi.SemestersApi();\n        smestersApiInstance.getSingleSemester(uid, sid, (error, data, response) => {\n            if (error) {\n                console.error(error);\n            } else {\n                console.log('API called successfully. Returned data: ' + data);\n                setSemester(data)\n            }\n        });\n\n        let lessonsApiInstance = new Kucukdevapi.LessonsApi();\n        lessonsApiInstance.listLessonsOfSemester(uid, sid, (error, data, response) => {\n            if (error) {\n                console.error(error);\n            } else {\n                console.log('API called successfully. Returned data: ' + data);\n                setLessons(data)\n            }\n        });\n\n\n    }, [])\n\n    const colorArray = [\"bg-gray-400\", \"bg-red-600\", \"bg-yellow-500\", \"bg-green-600\", \"bg-blue-300\", \"bg-indigo-300\", \"bg-purple-600\", \"bg-pink-600\", \"bg-gray-900\", \"bg-green-900\", \"bg-indigo-900\", \"bg-purple-900\", \"bg-pink-900\"]\n    let lessonNames = []\n    let lessonSlots = []\n    let lessonColors = []\n\n    for (let i = 0; i < lessons.length; i++) {\n        for (let j = 0; j < (lessons[i].slots).length; j++) {\n            lessonNames.push(lessons[i].name)\n            lessonSlots.push(lessons[i].slots[j])\n            lessonColors.push(colorArray[i])\n        }\n    }\n\n    let hour = String(semester.startHour)\n    let resStart = hour.split(\".\")\n    let startHour = Number(resStart[0])\n    let startMin = Number(resStart[1])\n\n    const period = semester.dLesson + semester.dBreak\n    const periodHour = parseInt(period / 60)\n    const periodMin = period % 60\n\n    const scheduleRows = [];\n    for (let index = 1; index <= semester.slotCount; index++) {\n        scheduleRows.push(<tr key={index}>\n            <td className=\"px-6 py-1 whitespace-no-wrap border-b text-blue-900 border-gray-500 text-sm leading-5\">{hour}</td>\n            <td className={`border border-gray-500 text-blue-900 text-sm leading-5 ${lessonSlots.includes(`0,${index}`) && `${lessonColors[lessonSlots.indexOf(`0,${index}`)]}`}`}>{lessonSlots.includes(`0,${index}`) && `${lessonNames[lessonSlots.indexOf(`0,${index}`)]}`}</td>\n            <td className={`border border-gray-500 text-blue-900 text-sm leading-5 ${lessonSlots.includes(`1,${index}`) && `${lessonColors[lessonSlots.indexOf(`1,${index}`)]}`}`}>{lessonSlots.includes(`1,${index}`) && `${lessonNames[lessonSlots.indexOf(`1,${index}`)]}`}</td>\n            <td className={`border border-gray-500 text-blue-900 text-sm leading-5 ${lessonSlots.includes(`2,${index}`) && `${lessonColors[lessonSlots.indexOf(`2,${index}`)]}`}`}>{lessonSlots.includes(`2,${index}`) && `${lessonNames[lessonSlots.indexOf(`2,${index}`)]}`}</td>\n            <td className={`border border-gray-500 text-blue-900 text-sm leading-5 ${lessonSlots.includes(`3,${index}`) && `${lessonColors[lessonSlots.indexOf(`3,${index}`)]}`}`}>{lessonSlots.includes(`3,${index}`) && `${lessonNames[lessonSlots.indexOf(`3,${index}`)]}`}</td>\n            <td className={`border border-gray-500 text-blue-900 text-sm leading-5 ${lessonSlots.includes(`4,${index}`) && `${lessonColors[lessonSlots.indexOf(`4,${index}`)]}`}`}>{lessonSlots.includes(`4,${index}`) && `${lessonNames[lessonSlots.indexOf(`4,${index}`)]}`}</td>\n        </tr >);\n\n        startHour += periodHour\n        startMin += periodMin\n\n        if (startMin >= 60) {\n            startHour += 1\n            startMin = startMin % 60\n        }\n\n        if (startMin < 10) {\n            hour = startHour + \".0\" + startMin\n        } else {\n            hour = startHour + \".\" + startMin\n        }\n    }\n\n    return (\n        <div className=\"flex flex-col my-8 xl:m-16 xl:mx-40\">\n            <h1 className=\"flex justify-start text-2xl ml-8 md:ml-4\">Overview</h1>\n            <div className=\"my-2 py-2 overflow-x-auto sm:px-6 pr-10 lg:px-8\">\n                <div className=\"align-middle inline-block min-w-full shadow overflow-hidden bg-white shadow-dashboard px-8 pt-3 rounded-bl-lg rounded-br-lg\">\n                    <table className=\"min-w-full\">\n                        <thead>\n                            <tr className=\"\">\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm text-left leading-4 text-blue-500 tracking-wider\">#</th>\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Monday</th>\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Tuesday</th>\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Wednesday</th>\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Thursday</th>\n                                <th className=\"px-6 py-3 border-b-2 border-gray-300 text-sm leading-4 text-blue-500 tracking-wider\">Friday</th>\n\n                            </tr>\n                        </thead>\n                        <tbody className=\"bg-white  \">\n                            {scheduleRows}\n                        </tbody>\n                    </table>\n                    <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-end my-4 work-sans\">\n                        <div>\n                            <nav className=\"relative z-0 inline-flex shadow-sm\">\n                                <div>\n                                    <a href=\"/\" className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-500 hover:text-gray-400 focus:z-10 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100 active:text-gray-500 transition ease-in-out duration-150\" aria-label=\"Previous\">\n                                        <svg className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                            <path fillRule=\"evenodd\" d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                                        </svg>\n                                    </a>\n                                </div>\n                                <div v-if=\"pagination.current_page < pagination.last_page\">\n                                    <a href=\"/\" className=\"-ml-px relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-500 hover:text-gray-400 focus:z-10 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100 active:text-gray-500 transition ease-in-out duration-150\" aria-label=\"Next\">\n                                        <svg className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                            <path fillRule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\n                                        </svg>\n                                    </a>\n                                </div>\n                            </nav>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Overview\n",{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":5,"column":8,"nodeType":"109","messageId":"110","endLine":5,"endColumn":19},{"ruleId":"111","severity":1,"message":"112","line":33,"column":8,"nodeType":"113","endLine":33,"endColumn":17,"suggestions":"114"},{"ruleId":"111","severity":1,"message":"115","line":40,"column":8,"nodeType":"113","endLine":40,"endColumn":10,"suggestions":"116"},{"ruleId":"103","replacedBy":"117"},{"ruleId":"105","replacedBy":"118"},{"ruleId":"111","severity":1,"message":"119","line":34,"column":8,"nodeType":"113","endLine":34,"endColumn":17,"suggestions":"120"},{"ruleId":"107","severity":1,"message":"121","line":10,"column":12,"nodeType":"109","messageId":"110","endLine":10,"endColumn":17},{"ruleId":"107","severity":1,"message":"122","line":10,"column":19,"nodeType":"109","messageId":"110","endLine":10,"endColumn":27},{"ruleId":"111","severity":1,"message":"123","line":104,"column":8,"nodeType":"113","endLine":104,"endColumn":42,"suggestions":"124"},{"ruleId":"111","severity":1,"message":"125","line":35,"column":8,"nodeType":"113","endLine":35,"endColumn":10,"suggestions":"126"},{"ruleId":"111","severity":1,"message":"119","line":40,"column":8,"nodeType":"113","endLine":40,"endColumn":10,"suggestions":"127"},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'UserContext' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'uid'. Either include it or remove the dependency array.","ArrayExpression",["130"],"React Hook useEffect has missing dependencies: 'semesterApiInstance', 'sid', and 'uid'. Either include them or remove the dependency array.",["131"],["128"],["129"],"React Hook useEffect has missing dependencies: 'CURRENT_SEMESTER.currentSemester', 'USER_LOGIN.userID', and 'USER_LOGIN.userToken'. Either include them or remove the dependency array.",["132"],"'dummy' is assigned a value but never used.","'setDummy' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'selectSlots'. Either include it or remove the dependency array.",["133"],"React Hook useEffect has missing dependencies: 'CURRENT_SEMESTER.currentSemester', 'USER_LOGIN.userID', 'USER_LOGIN.userToken', and 'currentLessonID'. Either include them or remove the dependency array.",["134"],["135"],"no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [refresh, uid]",{"range":"148","text":"149"},"Update the dependencies array to be: [semesterApiInstance, sid, uid]",{"range":"150","text":"151"},"Update the dependencies array to be: [CURRENT_SEMESTER.currentSemester, USER_LOGIN.userID, USER_LOGIN.userToken, refresh]",{"range":"152","text":"153"},"Update the dependencies array to be: [slots, semester, currentLessonID, selectSlots]",{"range":"154","text":"155"},"Update the dependencies array to be: [CURRENT_SEMESTER.currentSemester, USER_LOGIN.userID, USER_LOGIN.userToken, currentLessonID]",{"range":"156","text":"157"},"Update the dependencies array to be: [CURRENT_SEMESTER.currentSemester, USER_LOGIN.userID, USER_LOGIN.userToken]",{"range":"158","text":"159"},[1206,1215],"[refresh, uid]",[1377,1379],"[semesterApiInstance, sid, uid]",[1128,1137],"[CURRENT_SEMESTER.currentSemester, USER_LOGIN.userID, USER_LOGIN.userToken, refresh]",[4633,4667],"[slots, semester, currentLessonID, selectSlots]",[1303,1305],"[CURRENT_SEMESTER.currentSemester, USER_LOGIN.userID, USER_LOGIN.userToken, currentLessonID]",[1456,1458],"[CURRENT_SEMESTER.currentSemester, USER_LOGIN.userID, USER_LOGIN.userToken]"]